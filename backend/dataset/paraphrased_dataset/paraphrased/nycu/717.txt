Lochert et al. (2008) 提出的旅程時間預測演算法，以大型地標、高速公路和一般道路建立階層式路網。用路人規劃路徑時，會先以目的地附近的大型地標為導向，形成虛擬路線，接近地標後再規劃下一層級的道路。由於現有導航系統的地標資訊多為硬編碼，路徑規劃不夠動態，僅在接近目的地時才能利用更多資訊優化路徑。

Wan et al. (2016) 則結合群眾感知資訊和雲端輔助的擁塞控制算法，開發新的路徑規劃演算法 (Algorithm 1)。駕駛和乘客可透過智慧型裝置獲取路況，系統會自動啟動演算法。Algorithm 1 根據車輛進入時間、目的地、道路距離、即時路況和道路等級計算權重，並使用 Dijkstra 演算法找出最短路徑。

道路等級分為四級，權重  𝑞𝑖,𝑗  以公式 (1) 計算：


𝑞𝑖,𝑗 = 0 (第一級道路) / 0.5 (第二級道路) / 1 (第三級道路) / +∞ (無法使用)


道路壅塞狀態以  𝑟𝑖,𝑗  表示，公式 (2) 如下：


𝑟𝑖,𝑗 = +∞ (異常，無法使用) / 0 (其餘狀況)


Wan et al. (2016) 使用權重公式 (3) 建立有向圖 G = (V, E, φ) 並找出最短路徑：


φ(𝑆𝑖, 𝑆𝑗) = 𝛼√𝑣 + 𝛽∙𝑑𝑖,𝑗 + 𝛾∙𝑞𝑖,𝑗 + 𝑟𝑖,𝑗


其中， 𝑣𝑖,𝑗 為 0 時，φ(𝑆𝑖, 𝑆𝑗) 為無限大，代表路徑無法使用。權重值儲存於陣列 𝑊𝑁×𝑁，公式 (4) 如下：


𝑊𝑖,𝑗 = φ(𝑆𝑖, 𝑆𝑗)


最後，使用 Dijkstra 演算法規劃最短路徑，並採用 Fredman (1987) 的 Fibonacci heaps 優化，將時間複雜度從 O(|𝑉|²) 降低至 O(|𝐸| + |𝑉| ∙𝑙𝑜𝑔∙(|𝑉|))，提升演算法效率。
