實驗硬體採用 Intel Core i7-7700 2.8/3.8GHz 處理器，8GB 記憶體，並運行 64 位元 Windows 10 家用版作業系統。軟體方面，使用 Microsoft Visual Studio 2015 以 C++ 開發，程式進入點為 main。影像處理採用 OpenCV 3.43，其中 ML 模組使用 kNearest 進行字元辨識，SVM 學習並判斷影像是否包含車牌。DNN 模組則引用 TensorFlow 和 Darknet 訓練的模型檔 ( .pb) 進行預測。模型訓練和驗證使用 Anaconda Python/TensorFlow-GPU 環境下的 Jupyter Notebook 開發 CNN。依據 Darknet YOLO v3 & v2 文件 (https://github.com/AlexeyAB/darknet)，安裝 CUDA 10.0 和 cuDNN 10.0.130_411.31_win10，並在 Visual Studio 2015 中建置 Darknet C 原始碼以進行 YOLO 訓練。同時，根據相同文件建置可預測的 YOLOv2 DLL，專案將其加入參考，通過呼叫 detect 函數並引用訓練好的 YOLO 模型及組態檔，即可對停車場入口車牌影像進行物件偵測。
