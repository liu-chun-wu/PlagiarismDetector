一般開發模式將資料庫連線資訊直接寫入程式碼，並使用SQL語法進行資料庫操作和維護。相比之下，本研究提出的連線方式有三點主要差異：

一、原生連線方式直接在程式碼中嵌入資料庫資訊和SQL語法，如圖20所示。這種方式簡單易用，但缺點是容易暴露敏感資訊、缺乏SQL注入防護，且難以切換資料庫系統。

二、PDO連線模式（圖21）透過參數化查詢 mitigating SQL 注入風險，並簡化了資料庫系統的切換。然而，資料庫連線資訊仍然直接寫在程式碼中。

三、本研究的連線模式（圖22）基於PDO，並進一步將其物件模組化，加入錯誤訊息控制和組態檔管理。敏感資訊不再直接暴露在程式碼中，開發者只需呼叫簡化的物件方法即可操作資料庫（圖23）。詳細的模組程式碼請參考附錄一至附錄四。
