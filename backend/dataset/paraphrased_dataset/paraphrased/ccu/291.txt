Spinellis (2012) 指出，軟體包管理是系統開發的痛點之一。軟體包管理系統能有效解決這個問題，它提供以下幾個優點：首先，藉助社群力量，提供開發者各式各樣高生產力工具，方便下載、安裝及應用；其次，它會列出已安裝的軟體包清單，方便開發者在移植工具時，快速掌握已使用的套件和版本；最後，它提供完善的更新機制，確保工具維持在安全穩定的版本。

儘管軟體包管理系統優點眾多，但仍有不足之處。例如，為了安全穩定，收錄的工具包版本可能比官方最新版舊。因此，若追求最新版本，軟體包管理系統未必是最佳選擇。

本研究採用 Composer 作為軟體包管理系統。Composer 於 2012 年 3 月 1 日發行，是一個公開的 PHP 軟體包管理工具。由於現今網站應用程式套件多使用公開原始碼社群提供的 API，Composer 提供的自動更新工具，不僅降低套件維護的負擔，也大幅降低了零時差攻擊的風險。


本研究首先蒐集網站滲透手法相關文獻，探討實際運作方式、可能造成的損害，並測試 OWSAP ZAP、VEGA 等自動化工具。由於網站攻擊手法多變，固定手法的自動化工具準確性有限，因此本研究會彙整文獻，並以人工方式進行二階段滲透測試，了解實務工作、潛在風險及防護機制。

由於實際滲透與單一滲透測試工具的掃描方式不同，實際攻擊可能綜合運用多種手法以癱瘓網站或達成滲透目的 (邱泰源，民105)。因此，本研究將交叉比對兩種測試結果。
