本研究分析了2017年度提出的十大網站風險問題，並探討了個別風險的成因及相關學者建議的防護措施。  研究成果彙整成一項整合工具，以提升個別防護措施的修改便捷性和應用彈性，比較結果如表3所示。

表3  Our method 與學者建議比較

| 風險 | 學者建議 | Our Method |
|---|---|---|
| A1 注入攻擊 | 透過Prepare 指令組合完整指令。 | 引用學者建議並將存取需求模組化。 |
| A2 無效身分認證 | 須找出對應設定檔存放位置才能進行調整。 需重新啟動服務設定才能生效。 | 提供對應的組態設定值設定。無須重新啟動服務。 |
| A3 敏感資料外洩 | 系統資訊避免直接撰寫於程式之中。 預設的錯誤處理顯示需調教。 | 將系統資訊透過組態檔導入。自訂控制錯誤處理。 |
| A4 XML 外部處理漏洞 | 限制SYSTEM 屬性。 | 屬於環境設定討論，本研究不探討。 |
| A5 無效存取控管 | 需進行組態設定調整。 需重新啟動服務才能生效。 | 提供對應設定值進行修改。 無須重新啟動服務即可生效。 |
| A6 不安全組態設定 | 系統組態經驗法則。 | 屬於環境設定討論，本研究不探討。 |
| A7 跨網站攻擊 | 針對個別變數進行轉譯。 | 接收變數時自動進行變數轉譯。 取得資料庫資源時自動先行轉譯。 |
| A8 不安全的反序列化漏洞 | 檔案傳輸轉換過程。 | 屬於資訊傳遞過程，本研究不探討。 |
| A9 使用已有漏洞的元件 | 追蹤公開原始碼的API 版本 | 採用軟體包管理工具進行更新作業。 |
| A10 紀錄與監控不足風險 | 服務紀錄檔追蹤 | 工具提供增加資料庫存取紀錄。 |


研究發現，許多學者建議的防護措施，不僅需要程式設計人員提升程式安全觀念，也需要系統環境管理的資訊人員協助進行安全組態設定，且設定後通常需要重新啟動服務才能生效。本研究嘗試將這些組態環境訴求納入研究，希望透過工具調校來滿足環境調整的需求，使組態設定不再單純依靠資訊人員的經驗，而是可以透過參數調教，達成服務不中斷的升級作業。
