Android 惡意程式分析方法主要分為靜態、動態和混合分析三類。近年來，硬體運算能力的提升也使得機器學習被廣泛應用於惡意程式偵測。

靜態分析是透過反編譯工具萃取應用程式的原始碼，供研究人員直接分析，其優點是不需執行應用程式，且時間和資源消耗較低。常見的靜態特徵包括 Opcode、API call 和 Permission 等。例如，有研究使用 Android 權限結合機器學習分類器偵測惡意程式，準確率達 94%；另有研究結合 Android 權限和應用程式組件，準確率達 88%；還有研究分析 Manifest.xml 檔案並比對關鍵字清單，準確率達 90%，且成本低廉。

動態分析則是在虛擬機或沙盒等環境中實際執行應用程式，分析其行為。其優點是對程式碼混淆攻擊的強健性較高，但缺點是惡意程式的行為可能難以觸發，且硬體資源和時間消耗較高。例如，有研究分析 Android 系統開機時觸發的系統呼叫來偵測惡意程式，準確率達 95.8%；也有研究使用蜜罐技術偵測惡意程式，準確率達 96%；還有的研究修改 ADB 工具來記錄 API 呼叫和監控程序及執行緒。另有研究使用動態分析工具 DroidBox 並結合馬可夫鏈篩選特徵，再輸入機器學習模型。

混合分析結合了靜態和動態分析的優點，但時間成本較高。例如，AASandbox 提供二階段分析，先以離線模式執行靜態和動態分析；也有研究在訓練階段使用靜態和動態分析，測試階段僅使用靜態分析以降低時間成本；還有的研究結合靜態分析的 Bytecode 和動態分析的可疑行為檢測；另有研究使用 API 呼叫、權限和系統呼叫等特徵及其相依性結合機器學習進行檢測。

許多研究也將這些分析方法獲得的特徵輸入機器學習模型。例如，有研究使用動態分析萃取的系統函數結合決策樹和單純貝氏分類器，準確率達 90%；也有研究使用系統呼叫結合反向傳播法，F1-score 達 98.27%；還有的研究使用靜態和動態分析萃取超過 200 種特徵並結合深度學習，準確率達 96.60%；另有研究使用函數呼叫和系統呼叫訓練機器學習模型，並能偵測未見過的惡意程式；也有一些研究從  AndroidManifest.xml 檔案中萃取權限特徵，並使用單純貝氏分類器進行分類，證明結合 Android 權限和機器學習技術能更有效地偵測 Android 惡意程式。
