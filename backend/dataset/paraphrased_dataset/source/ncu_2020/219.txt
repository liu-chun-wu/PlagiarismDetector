Android 應用程式的檔案為apk 格式，apk 格式為一種壓縮檔形式，裡面包含了dex 檔案、AndroidManifest 檔案及其他資源檔。 Android 應用程式中所有的原始碼將會被編譯為class 檔案，class 檔案中包含了 bytecode 指令，在傳統的Java 應用程式中，這些bytecode 指令將在JVM（Java Virtural Machine）上執行，但Android 應用程式中是依靠Android Runtime（ART）所執行的， Android Runtime 上執行的是與傳統Java 應用程式不相容的Opcode，因此Android 應用 程式需要將所有的class 檔案轉化為dex 檔案。dex 檔能夠以baksmali[20]轉換為多個 smali 檔案，smali 檔案中包含具可讀性的Dalvik bytecode，每個smali 檔案代表一個類 別（class），且包含了class 中的方法（method），每個方法中有著許多指令（instruction）， 這些指令則由一個操作碼（Opcode）及許多運算元（Operand）所組成，而常見的Opcode 序列特徵即是萃取出Android 應用程式中所有的Opcode，來代表整個Android 應用程 式；API 特徵則是在smali 檔案中呼叫的方法。 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 AndroidManifest.xm 檔案包含了Android 應用程式所宣告的權限，這些權限形成了 Android 作業系統的安全機制，且Android 系統根據這些權限來控制系統中較敏感的API 的存取權，AndroidManifest.xml 檔案中除了記錄權限等相關資訊外，應用程式各組件的 相關資訊也儲存在其中，組件則包括了四種類別，分別為Activity、Service、 broadcastReceiver 及contentProvider。Android 應用程式只有在使用者同意使用權限的情 況下才能使用系統資源，在正常情況下，Android 應用程式在首次開啟時，會向使用者 請求此應用程式執行時所需的相關權限的同意權，而Android 應用程式如果嘗試使用一 些未經使用者許可的資源及操作，將可能直接當機。從Android 系統的權限機制來看， Android 應用程式所獲取的權限能反映出其可能執行的行為以及可能帶來的危害。在 Android 惡意程式分析領域中，AndroidManifest.xml 檔案裡較常被用來分析的特徵為開 發者所宣告的權限。 上述所提到的Opcode、API 及Permission 三個特徵都屬於靜態特徵，即不需要實際 執行Android 應用程式就能萃取，其他靜態特徵還包括Package 名稱及應用程式大小等 等。以下為使用靜態特徵分析Android 惡意程式的研究，[4, 21, 22]使用了較敏感及較可 疑的API 呼叫及Permission 為特徵；[23]使用了敏感的Opcode 序列及字串當作特徵； [24, 25]則是使用了Java Bytecode、Bytecode 頻率、Opcode 及Opcode 序列等特徵。[19, 26]從smali 檔案中萃取出DFG（Data-Flow Graph）及CFG（Control-Flow Graph）為特 徵；[27] 將Android 應用程式中的dex 檔案轉換為圖片及文字，接著從圖片中萃取出顏 色及紋理特徵。 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 動態特徵則是需要實際執行Android 應用程式才能萃取及被使用的特徵，較常見的 動態特徵有系統呼叫、網路流量、收發簡訊、資源消耗、系統日誌及輸入輸出操作等等。 以下為使用動態特徵分析Android 惡意程式的研究，[28]使用了系統呼叫作為特徵；[29] 使用了網路流量為特徵；[30]使用Android 沙盒工具錄製出應用程式在某段時間觸發的 行為及功能為特徵；[31]使用了資源消耗為特徵。
