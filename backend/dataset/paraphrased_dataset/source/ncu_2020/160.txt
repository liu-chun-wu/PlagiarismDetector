網際網路發展至今早已和當年 TCP 草創之初截然不同，網際網路的巨大成功帶動 了各種網路技術的快速發展。過去，網路頻寬侷限於實體線路技術與成本，一般終端使 用者所能應用的頻寬十分狹小。面對日益普及的高頻寬網路環境以及使用者的多元需求， 許多原本適用於網際網路的技術面臨已不再適任的瓶頸，TCP 就是極需提升的技術之一。 自 1981 年 TCP 被正式定義在 IETF RFC793 以來，許多 TCP 版本相繼被提出，試圖 改良 TCP 的壅塞控制技術，以因應不同底層網路技術的發展及限制，維護整體網路的 效能。其中，如何在高頻寬網路下突破傳統 TCP 所帶來的自我產能限制，是近年來隨 著網路頻寬大幅增加後所面臨到的問題。 傳統 TCP 會受限於自己本身的壅塞控制（Congestion Control）機制，即便在無人競 爭的高速網路環境中，其頻寬利用度亦不高。目前被廣泛使用的 TCP 版本 Reno，是一 種以封包遺失為基礎（loss-based）的網路壅塞控制技術，其壅塞控制機制，是以 AIMD （Additive Increase and Multiplicative Decrease）演算法來調整其壅塞窗口 （Congestion Window），作為傳輸速率控制機制。在 AIMD 機制下 TCP Reno 線性增加其壅塞窗口直 至察覺發生封包遺失，在成功重傳遺失的封包後就立即將壅塞窗口值調整為原本的二分 之ㄧ，如圖2-6 所示。 圖2-6 壅塞窗口因封包遺失而急遽減少 資料來源：（Grigorik，2013） AIMD 機制運作在高頻寬網路中，至少有三個問題： (1) 在網路壅塞情況解除後，壅塞窗口增加速度過於緩慢，需經一段長時間後才 能爬升到應有的傳輸速率，無法善用網路資源。 (2) 當封包遺失事件（收到三個 dup-ACK 或發生 Timeout）發生後，壅塞窗口值 立刻減為原本的一半或設為初始值，降幅太過劇烈。 (3) AIMD 本身即會週期性的造成封包的遺失，讓 TCP 處於不斷的增減其壅塞窗 口的震盪情形之中，如圖2-7。值得注意的是，圖 2-6 中的 TCP 傳輸速率在 第6 個Round Trip 遭遇封包遺失事件後還需要6 個Round Trips 的時間才能再 度回復到之前的高點，此其間浪費了許多可用的網路資源。上述三個問題導 致傳統 TCP 在高速網路環境下，無法有效利用頻寬資源、網路傳輸效能亦隨 之低落（詹益禎, 2008）。 圖2-7 TCP 壅塞窗口震盪情況 資料來源：（詹益禎, 2008）
