量都是獨立動作，不要影響到鄰近其他chunk 的sample 個數表示。 表 8 stsc box 呈現範例 No. First Chunk Samples per chunk 資料來源：本研究 假設我們欲了解第15 號video sample 落在哪一個chunk 內的話，從表 8 我們得知前 3 個chunk 加總起來的sample 個數為3+5+5=13，而第4 個chunk 內有2 個sample，這就 代表了第14 號以及我們欲了解的第15 號sample 就落在第4 個video chunk 內。又假設stco box 與stsz box 的呈現資訊分別如表 9 和表 10 的話，則第15 號sample 在檔案中的偏移 位址就可以被計算出來為788637=782035（第4 個chunk 的偏移位址）+6602（第14 號sample 的大小）。 表 9 stco box 呈現範例 No. Chunk offset 資料來源：本研究 表 10 stsz box 呈現範例 No. Sample size 資料來源：本研究 透過上述方式我們即可計算出所有video sample 在檔案中的偏移量資訊，可幫助我們 快速偏移到各video sample 的位址上來進行分析。在每個video sample 中資料是以NALU 結構形式做存放，每個NALU 前面都有4 Bytes 以big-endian 表示的長度欄位以及1 Byte 的NALU header 欄位，這邊的NALU size 則不包含NALU size 欄位本身。Video sample 的 結構如圖 11 所示。這邊可以看到1 個video sample 其實可以收容多個NALU，實務上因 為一個sample 只會對應到1 筆stts box 中delta time 紀錄，所以大部分sample 其中只會有 一個VCL-Unit。 圖 11 Video Sample 結構 資料來源：本研究 圖 12 為實例上透過第三方工具MP4 Reader 解析出來的一個moov box 結構，這個 moov box 範例內有2 個trak box 一個是video trak 另一個則是audio trak。我們針對video 的 trak box 做展開則可以看到我們關注的stts、stsz、stsc、stco、stss 五個box 會被放在 trak/mdia/minf/stbl box 路徑之下。 圖 12 MP4 Box 結構 資料來源：本研究
