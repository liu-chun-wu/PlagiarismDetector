協同過濾演算法主要是透過找出與使用者有同樣喜好的一群人，來預測使用者對商 品的喜好程度，主要分為兩類：以使用者基礎(User-Based)的協同過濾、以商品為基礎 (Item-Based)的協同過濾。基本原理是依據每一位使用者對於商品的評價描繪出一個使 用者與商品的矩陣，圖 2-1〔19〕，在這個矩陣中找出使用者與商品的相似度，進而預 測每位使用者對於每樣商品的喜好程度,最後依照這個預測的喜好程度給予使用者推薦 的商品，以下針對這兩種方法進一步說明： 2.2.1 以使用者為基礎(User-Based) 透過不同使用者對商品的評分來找出用戶之間的相似性，基於此相似性做推薦。 如圖 2-1〔19〕，如何預測使用者1 對於商品4 的喜好程度(以使用者為基礎)? 1. 找尋n 個和使用者1 相似的用戶且評價過商品4 為使用者n 2. 根據使用者n 對商品4 的評價，以相似度為權重回填結果 3. 對所有使用者，重覆上述步驟，直到所有空格都被填滿 圖2-1 協同過濾-以使用者為基礎 資料來源：Systex Etu. (2014) 2.2.2 以商品為基礎(Item-Based) 透過使用者對不同商品的評分來找出商品之間的相似性，基於此相似性做推薦。 如圖 2-2〔19〕，如何預測使用者1 對於商品4 的喜好程度(以商品為基礎)? 1. 從使用者1 歷史評分紀錄中計算商品n 和商品4 的相似度 2. 將使用者1 對於商品n 的評價，以商品相似度為權重回填 3. 對所有商品，重覆上述步驟，直到所有空格都被填滿 圖2-2 協同過濾-以商品為基礎 資料來源：Systex Etu. (2014) 在上述推演的過程中不難發現此演算法最大的麻煩在於現實環境中為數不小的使 用者與商品數，加以未必使用者都會對每一個商品做評分以至於此矩陣都是一個龐大的 稀疏矩陣，為了讓此模型可以被計算我們必須將此矩陣做矩陣分解，如圖 2-3〔20〕。 矩陣分解的做法本研究參考張良卉〔21〕的研究使用交錯最小平方法 (Alternating Least Square:ALS)〔22〕以帶來更好的效能，而本研究使用的平行計算框架Apache Spark 中協同過濾演算法也是透過ALS 來做矩陣分解。 圖2-3 矩陣分解 資料來源：Akoios. (2020)
