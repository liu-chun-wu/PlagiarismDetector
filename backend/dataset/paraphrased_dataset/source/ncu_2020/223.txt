隨著大數據的時代來臨，擁有更多隱藏層（Hidden Layer）的卷積神經網路相較於 傳統的機器學習方法有更複雜的網路結構，也因此具有較強大的特徵萃取能力，尤其卷 積層（Convolution Layer）的運算能夠找出輸入資料哪些區塊符合特定的特徵，使卷積 神經網路在電腦視覺、影像識別任務中有著顯著的成績[10]。卷積神經網路的架構中， 卷積層（Convolution Layer）中的不同卷積核（Filter）能夠對輸入資料進行卷積運算， 產生多張特徵圖（Feature Map），再經由池化層（Pooling Layer）的運算將特徵圖壓縮並 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 減少資料維度，最後輸入至全連接網路進行分類。除了在影像識別任務上的成就外，卷 積神經網路對自然語言處理方也有不錯的效果，包括語意分析及問題分類[55]，因為經 過卷積運算後產生的特徵圖能夠包含了輸入資料的上下文隱含資訊，例如Opcode 序列 中的語意關係。在Android 惡意程式分析領域中，應用卷積神經網路中的卷積層能夠萃 取出Android 惡意程式中的特徵，產生特徵圖，池化層則對特徵圖壓縮及降維，留下較 較重要的特徵，最後以全連接網路層執行惡意程式檢測或分類任務。 以下為應用卷積神經網路於Android 惡意程式檢測的研究，[56]將Android 應用程 式反編譯成smali 檔，接著從中萃取出Opocde 序列，並將Opcode 序列編碼成獨熱編碼 （One-hot vector），之後將編碼過後的Opcode 序列輸入至嵌入層（Embedding Layer）， 以讓卷積神經網路中的卷積層能夠捕捉到Opcode 序列的語意資訊，接著池化層萃取出 對惡意程式偵測較重要的特徵，並同時有壓縮及降維的作用，最後使用多層感知器 （Multilayer Perceptron，MLP）來預測Android 應用程式屬於惡意程式的機率為何。此 做法僅萃取了Android 應用程式中的Opcode 序列，並無以人工的方式去建構特徵，因 此卷積神經網路的優點也非常顯而易見，最主要的優勢為不需要手動去建構特徵，減少 進行特徵工程的時間成本，且卷積神經網路的架構的計算複雜度比起使用N-gram 對 Opcode 處理的方式更有效率；[57]從smali 檔案中分析出CFG（Control Flow Graph）、 DFG（Data Flow Graph）二種圖，之後將這些圖經過嵌入層轉換為矩陣，再輸入至卷積 神經網路進行惡意程式偵測，卷積神經網路架構中包含了一層卷積層、一層池化層及二 層全連接網路層，有別於傳統的卷積層，輸入資料將會經由卷積層重新修改大小至較小 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 的維度，讓模型參數減少，達到提升訓練效率的目的。實驗使用多種資料集，包括Marvin （75,996 個良性程式及10,572 個惡意程式）、Drebin（5,560 個惡意程式）、VirusShare （11,080 惡意程式）、ContagioDump（1,150 個惡意程式）及Mi App Store（1,771 個良性 程式），實驗結果顯示，惡意程式偵測準確度達99.721%，F1-score 達98.7%；[58]從smali 檔中萃取出API 呼叫為特徵，並將每個API 呼叫以數字來表示，API 序列則視為一連串 的數字，之後再將API 序列輸入word2vector[59]及GloVe[60]進行語意特徵向量化，卷 積神經網路架構包含一層卷積層、全局池化層及全連接網路層，同時也使用了Dropout 來避免模型過度擬合（Overfitting）及提升偵測效果。實驗所使用的資料集包含 Malgenome（1,258 個惡意程式）、Drebin（5,555 個惡意程式）及MalDozer（20,089 個惡 意程式及37,627 個良性程式），實驗結果顯示惡意程式偵測及分類的F1-score 達到99%； [61]比較了不同的卷積神經網路架構應用在Android 惡意程式資料集上偵測的效果，首 先將classes.dex 檔案中的bytes 視作為單詞，並藉由Doc2Vec[62]將整個classes.dex 檔案 視為一個文件，每個Android 惡意程式都以文件向量呈現，並輸入不同的卷積神經網路， 第一個卷積神經網路包含三個二維且使用ReLU 函數的卷積層，每個卷積層之後都接著 池化層及Dropout 層，最後全連接網路層使用Softmax 激活函數；第二個卷積神經網路 的架構與第一個相似，差別為使用不同長度的文件向量；第三個卷積神經網路使用了嵌 入層學習輸入資料中每個byte 的表示法，之後使用一維的卷積層。實驗結果顯示，第二 個卷積神經網路的準確度最高，達到95.1%，第三個卷積神經網路的準確度則為次高， 達到89%；[63]篩選出惡意程式較常使用的API 呼叫，但由於某些API 呼叫在惡意程式 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 及良性程式中經常出現，若單純以這些API 呼叫來偵測惡意程式，將導致假陽性（False Positive）的機率提高，因此作者根據篩選出來的API 呼叫之間的關係，包括出現在同一 個API 區塊中的API 呼叫以及出現在鄰近API 區塊的API 呼叫，進一步轉換為API 圖 向量，之後輸入至卷積神經網路，進行惡意程式偵測。實驗使用真實世界中的3,697 個 惡意程式及3,312 個良性程式做為資料集，F1-score 可達到94.3%。[64]以動態分析的方 式偵測Android 惡意程式，使用的動態特徵為惡意程式執行過程中所觸發的相關硬體事 件，在其中的200 多筆事件中，作者篩選出其中184 筆事件，視為最能夠偵測出惡意程 式的特徵，最後將每一筆事件視為圖像中的每一個像素點，而像素點的值則是對應的事 件出觸發的次數，經由這樣的轉換形成灰階圖像，輸入至卷積神經網路進行惡意程式分 類。 以上研究皆使用到了卷積神經網路進行Android 惡意程式分析，且大多研究使用了 classes.dex 檔案中的資訊當作特徵，例如bytecode 或是反編譯過後的smali 檔案中的 Opcode 及API 去偵測Android 惡意程式，其中classes.dex 檔案萃取出的特徵又可分為 二種型態，第一種為基於圖像的分析，例如CFG（Control-Flow Graph）及DFG（Data- Flow Graph）；第二種為基於序列的分析，例如API 呼叫序列或Bytecode 序列，[65]則提 到若使用序列型特徵如API 方法呼叫，神經網路模型選擇卷積神經網路會比傳統機器學 習的支援向量機的效果來得更好。卷積神經網路的架構對Android 應用程式中的序列型 特徵（Opcode 及Bytecode）中的語意關係處理有著非常好的效果，且以上幾篇相關研究 皆單純使用從Android 應用程式萃取出的Opcode 或Bytecode，未經過人工進行特徵工 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 程，因此卷積神經網路另一個最大好處就是不需要依靠人工的方式建立特徵，即可輸入 至模型進行有效的分類。與傳統的全連接神經網路相比，卷積神經網路能夠自動學習到 上下文的結構資訊，不同結構的卷積層中也能學習到不同大小的上下文結構，較新型的 卷積神經網路也隨每年相繼推出，有著更多層的網路結構，但較少的網路參數等特色， 使得卷積神經網路能夠捕捉更複雜的特徵，提高預測效果。
