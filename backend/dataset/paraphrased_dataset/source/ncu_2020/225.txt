在惡意程式分析的領域中，也有不少將惡意程式進行樣本擴增的研究，例如[68, 69] 將惡意程式中的特徵轉換成向量後，在模型訓練的過程中，調整這些特徵向量中的值， 以找出模型的決策邊界（Decision Boundary），藉此方式來找出能影響模型分類結果的關 鍵特徵。[70, 71]為使用對抗式樣本（Adversarial Example）攻擊惡意程式檢測器的研究， 對抗式樣本為在不破壞惡意程式功能的前提下，對現有的惡意程式的特徵細微修改，達 到使惡意程式檢測器將其分類成良性程式以躲過檢測的一種樣本。這二篇研究修改現有 惡意程式樣本中的特徵，觀察哪些特徵對模型判別惡意程式及良性程式有較大的決定性， 進而去改變現有惡意程式中這些特徵，以產生對抗式樣本。 而從2017 年起，才開始有將生成對抗網路應用於惡意程式分析的研究，[69, 72]提 出了零日攻擊（Zero-day Attack）的威脅性，零日攻擊是指駭客利用還沒有被修補的漏 洞進行的攻擊，這種攻擊對網路安全有著極大的威脅性，因為不同於已知的攻擊手法， 零日攻擊的手法通常難以被現有的檢測器所偵測出來。而這二篇研究利用生成對抗網路 學習現有惡意程式樣本的特徵，生成新的樣本，由於新的樣本中包含了現有惡意程式的 特徵，但同時又不屬於這些現有惡意程式的類別，因此作者將這種擴增樣本視為零日攻 擊的一種，並將這些樣本輸入到惡意程式檢測器分析，最後實驗結果顯示這些檢測器對 這種未見過的樣本識別能力明顯下降。 [8, 9]皆提到在惡意程式資料集的樣本數不足的情況下，使用深度學習模型檢測惡意 程式的結果將大幅下降。[8]為了提升深度學習模型對Windows 惡意程式偵測的效果， 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 首先使用[51]的方法將惡意程式圖像化，之後使用深度卷積生成對抗網路擴增原始資料 集，再輸入至深度學習模型進行訓練，實驗結果發現，以擴增後的新資料集訓練深度學 習模型，模型判別惡意程式的準確度從以原始資料集訓練模型的84%提升至90%，證明 使用深度卷積生成對抗網路擴增樣本，使訓練樣本數增多的情況下，對於深度學習模型 的訓練結果是有幫助的；[9]則提到在惡意程式資料集中，其中惡意程式家族分布不均或 是特定惡意程式家族的樣本數量過少的情況下，將會造成深度學習模型辨識惡意程式的 能力下降。 在2021 年，[17]為了解決某些Android 惡意家族因為樣本數較稀少，使深度學習模 型無法有效訓練，導致偵測效果不佳的問題，於是將這些少樣本惡意家族中的惡意程式 輸入至卷積生成對抗網路，生成更多惡意程式樣本，達到資料擴增的目的。作者首先從 Android 惡意程式萃取出Opcode 序列，並將每個Opcode 從十六進制表示法轉換成十進 制表示法，再將Opcode 序列向量轉換為二維矩陣，最後轉換為灰階圖像。在實驗中， 作者將少樣本惡意家族中的灰階圖像輸入至卷積生成對抗網路進行樣本擴增，最後以擴 增後的資料集輸入至卷積神經網路進行惡意家族分類，實驗結果顯示，與使用原始資料 集比較，以擴增後的資料集訓練卷積神經網路，確實提高了對少樣本惡意家族的F1-score， 證明卷積生成對抗網路能夠有效學習少樣本惡意家族中的特徵並生成額外樣本；此外作 者也測試了以卷積生成對抗網路生成的擴增樣本取代原始樣本來訓練卷積神經網路，實 驗結果顯示與使用原始樣本來訓練模型的效果差異不大，證明了卷積生成對抗網路生成 的擴增資料保有惡意程式原本的特徵；最後作者也將卷積生成對抗網路與傳統的圖像擴 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 增方法進行比較，包括水平、垂直及旋轉圖像等方式，結果顯示以卷積生成對抗網路的 擴增資料來訓練卷積神經網路有較好的效果。 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 三、 系統設計 本章節將針對本研究之整體系統架構進行介紹，系統架構總共可分為5 個模組，其 中包括反編譯模組、特徵向量化模組、RGB 圖片生成模組、惡意程式樣本擴增模組及惡 意家族分類模組，而各模組詳細的運作方式及流程將依序在各小節說明。 整體系統架構示意圖如圖 11 所示，從輸入Android 惡意程式到輸出此惡意程式所 屬惡意家族的結果，整個過程可分為五個階段。 圖 11  系統架構 （圖片來源：本研究） 在反編譯階段中， 將Android 惡意程式解壓縮，提取出classes.dex 檔案及 AndroidManifest.xml 檔案，並對classes.dex 檔案反編譯為smali 檔案，並從其中萃取出 Opcode 及API；另外從AndroidManifest.xml 檔案提取出Permission。 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 在特徵向量化階段中，將反編譯階段萃取出來的相關惡意程式特徵（Opcode、API 及Permission）依不同的前處理方式進行編碼，生成對應的特徵向量，其中每個特徵的 向量生成方式將在後面小節詳細說明。 在RGB 圖片生成階段中，根據特徵向量化階段生成的Opcode 特徵向量、API 特徵 向量及Permission 特徵向量，分別轉化成RGB 圖片中的三個色彩通道（紅色通道、綠 色通道及藍色通道），之後將這三個色彩通道合成為一張能代表此惡意程式特徵的RGB 圖像，其中每個特徵向量的色彩通道轉化方式及合併為RGB 圖片的方式將在後面小節 詳細說明。 在惡意程式樣本擴增階段中，首先會先判斷此Android 惡意程式是否屬於少樣本惡 意家族，若是的話將輸入至惡意程式樣本擴增模組進行擴增，擴增模組的架構將在後面 小節說明。 最後在惡意家族分類階段中，將擴增後的少樣本惡意家族樣本，與其他惡意家族的 樣本一同輸入至分類模組進行惡意家族分類，幫助卷積神經網路更全面地學習少樣本惡 意家族中的特徵，並進行分類，最後輸出Android 惡意程式所屬家族的結果。
