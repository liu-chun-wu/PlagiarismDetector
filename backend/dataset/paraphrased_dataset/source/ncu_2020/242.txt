本研究實驗中所使用的Drebin 及AMD 惡意資料集為在Android 惡意家族分類研究 中較常使用的資料集，其中Drebin 擁有179 個惡意家族，總樣本數達5,560 個，AMD 擁有71 個惡意家族，總樣本數達24,553 個，然而資料集的樣本年代較舊，Drebin 資料 集為2010 年至2012 年的惡意程式，AMD 資料集則為2010 年至2016 年的惡意程式， 本研究架構雖然能以深度卷積生成對抗網路對較小的惡意家族進行樣本擴增，減輕特定 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 惡意家族樣本數不足導致模型訓練不佳的問題，但在擴增樣本之前，還須面臨如何取得 較新惡意家族的樣本的問題。在2020 年，[47]調查了40 篇Android 惡意家族分類的研 究，其中提到Android 惡意家族分類較常使用到的資料集，除了Drebin 及AMD 以外， 還有Genome（包含2010 年至2011 年的Android 惡意程式）、Contagio（包含2011 年的 Android 惡意程式）及Marvin（來源為Genome 及Contagio），然而這些Android 惡意家 族資料集的時間介於2010 年至2011 年，也面臨資料集年代較舊的問題，隨後作者提出 了Android 惡意家族分類研究常見的三個問題，一為大多數的研究使用的資料集數量太 小；二為使用的惡意家族資料集過時且不再更新；三為部分研究使用自行蒐集的惡意家 族資料集，而不使用較主流的資料集進行分類。 在2020 年，[74]針對訓練資料集較舊而使模型老化的問題，開發出了一個能減緩模 型老化的架構，做法為萃取出現有Android 惡意程式及良性程式的API，並轉換為向量， 並依這些API 向量之間的距離進行分群，而每個API 群集則視為一個特徵，多個API 群 集則視為屬於整個架構的特徵集（Feature Set），Android 惡意程式及良性程式則根據此 特徵集生成特徵向量，最後輸入至深度學習模型進行訓練。而當有較新的Android 惡意 程式輸入模型時，同樣萃取出API，並將未出現過在特徵集中的API 依向量距離加入至 現有特徵集，之後根據更新過後的特徵集產生Android 惡意程式的向量，以輸入至深度 學習模型進行預測，實驗使用2011 年的資料集訓練模型，之後使用2012 年、2013 年、 2014 年、2015 年及2016 年的資料集進行測試，F1-score 分別為97.49%、95.02%、88.48%、 78.22%及73.72%。然而本研究為惡意家族分類，是一種多類別預測任務，還是必須有較 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 新的惡意家族類別的樣本輸入至深度學習模型訓練之後，模型預測類別才能包含此類新 型惡意家族，因此本研究最大限制為惡意家族訓練資料集較舊，若有較新的惡意家族樣 本輸入至模型，將會強制把此樣本分類為現有資料集中的某個家族。
