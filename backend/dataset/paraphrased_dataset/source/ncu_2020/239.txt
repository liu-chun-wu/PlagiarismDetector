實驗七主要目的為與近幾年來同樣將Android 惡意程式圖像化並使用機器學習方法 將Android 惡意家族分類的研究進行比較。[18]為2020 年提出的研究，其中使用了[51] 所提出的程式圖像化方法，將AMD 中的惡意家族轉換為灰階圖像，並使用了四種圖像 萃取法對灰階圖像進行處理以生成特徵，值到注意的是，作者在原文中提到，為了有效 訓練機器學習模型，因此只挑選樣本數大於500 的惡意家族進行實驗，最後再輸入多種 機器學習模型進行分類，使用的分類模型包括Random Forest、IBk、J48 及Decision Table， 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 實驗中探討了各種圖像萃取法的組合及搭配何種機器學習分類器能使惡意家族分類達 到最好的結果。 本研究使用與[18]相同的實驗資料集，包含10 個AMD 惡意家族，分別為Airpush、 BankBot、Dowgin、DroidKungFu、FakeInst、Fusob、Jisut、Kuguo、Mecor、及Youmi， 並使用十折交叉驗證，訓練資料集及測試資料集比例為9:1，最後使用十折交叉驗證中 的十折平均F1-score 作為最後比較指標。 實驗結果如表 14 所示，顯示本研究方法在每個AMD 惡意家族上皆有較高的偵測 能力，在其中5 個家族中，不管是以[18]或是本研究所提出的方法進行偵測，F1-score 皆 超過99%，[18]對惡意家族BankBot 的F1-score 為99.30%，本研究為99.46%；[18]對惡 意家族FakeInst 的F1-score 為99.20%，本研究為99.88%；[18]對惡意家族Fusob 的F1- score 為99.60%，本研究為99.72%；[18]對惡意家族Jisut 的F1-score 為98.60%，本研 究為99.73%；[18]對惡意家族Mecor 的F1-score 為99.60%，本研究為99.95%。 在其餘5 個惡意家族中，有4 個惡意家族，本研究方法的F1-score 都較高出[18]5% 以上，另1 個惡意家族則高出1.48%。[18]對惡意家族Dowgin 的F1-score 為80.40%， 本研究為87.27%；[18]對惡意家族DroidKungFu 的F1-score為82.90%，本研究為93.13%； [18]對惡意家族Kuguo 的F1-score 為74.50%，本研究為79.10%；[18]對惡意家族Youmi 的F1-score 為78.10%，本研究為83.08%；[18]對惡意家族Airpush 的F1-score 為94.20%， 本研究為95.68%。 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 表 14  與[18]比較AMD 惡意家族分類結果 AMD 惡意家族 樣本數 Iadarola, et al. [18] 本研究 F1-score F1-score Airpush 7,843 94.20% 95.68% BankBot 99.30% 99.46% Dowgin 3,384 80.40% 87.27% DroidKungFu 82.90% 93.13% FakeInst 2,137 99.20% 99.88% Fusob 1,268 99.60% 99.72% Jisut 98.60% 99.73% Kuguo 1,199 74.50% 79.10% Mecor 1,820 99.60% 99.95% Youmi 1,300 78.10% 83.08% （資料來源：本研究）
