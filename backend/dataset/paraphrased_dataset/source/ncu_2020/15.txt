此情況發生在MP4 內最後一個video sample 的 delta time 為0 的時候（圖 30），因無 法再往後合併，故只能往前找到一個delta time 非0 的sample 目標合併。或者是因為有 問題的video sample 剛好是該video chunk 中的最後一個sample，並且目前的video chunk 與下一個video chunk 因中間有穿插audio chunk 導致無法直接向後合併的時候（圖 32）。 在前述兩種情況下則可採用本小節向前合併的修正方式。圖 30、圖 32 所對應到的修正 流程分別為圖 29 以及圖 31。 以下說明針對圖 29 也就是修正情境發生在最後一個Video Sample 時所使用之修正 程序：  項目1：找到對應到影像所屬的trak box 於檔案中的偏移位址。  項目2：取得影像所屬的trak box 中的stts、stsz、stsc、stco、stts box 原始資料， 並存放於執行程式的資料結構中。  項目3：正規化stsc、stts box 原始資料並存放於程式暫存的資料結構中 （可參 考本文2.4 小節）。  項目4：計算各video sample 於檔案中的偏移量資訊並存放於執行程式的資料結 構後，先針對於stts box 中對應到delta time 為0 的每一個video sample 檢查，分 析其中是否有包含VCL NAL-Unit，如果有，則將Sample 的delta time 於程式暫 存的資料結構中調整成不為0，反之則不作調整，最後移除於程式中暫存的stts box 資料結構中delta time 為0 的紀錄。  項目5：如項目4 中移除stts box delta time 為0 的紀錄對應到的是檔案中最後一 筆video sample。  項目6：該video sample 所屬的video chunk 內有多個video sample，可以於自身 所屬的video chnuk 中找到位於自身之前相連的video sample 其delta time 是大於 0。  項目9：因為項目4 的動作會導致stts box 表示的video sample 數減少，因此需 同步更新程式暫存的stsc box 結構中對應每一個video chunk 的video sample 個數 資訊。另外，因為是在同一個chunk 內將delta time 為0 的sample 往前合併到相 鄰的sample，故對應到程式中暫存的stsz box 資料結構中delta time 為0 的項目 處理方式為將自身的sample size 數值加到相鄰的video sample 對應到的sample size 中，最後刪除原自身於stsz box 結構中的紀錄項。  項目14：因為部分video sample 合併消失後，需要針對原I-Frame 所屬的sample index 作re-index 的動作。  項目15：重新產生stts、stco、stsc、stsz、stss table bytes，重建並產生影像所屬 的trak box 位元組陣列。最後重建整個moov box 位元組陣列。 圖 29 修正流程圖──狀況一：當最後一個Video Sample 時 資料來源：本研究 圖 30 修正示意圖──狀況一：當最後一個Video Sample 時 資料來源：本研究 以下說明針對圖 31 也就是修正情境發生在欲修正的Video Sample 後面緊鄰Audio Chunk 時所使用之修正程序：  項目1 到項目4：同4.1.1 小節中項目1 到項目4。  項目5：如項目4 中移除stts box delta time 為0 的紀錄對應到的不是檔案中最後 一筆video sample。  項目7：項目4 中移除stts box delta time 為0 的紀錄所對應到的video sample 是 落在video chunk 的最後。  項目10：該video chunk 與次一個video chunk 因為中間有穿插audio chunk 而不 連續。  項目13：同4.1.1 小節中項目9。  項目14 到項目15：同4.1.1 小節中項目14 與項目15。 圖 31 修正流程圖──狀況一：當Video Sample 緊接Audio Chunk 時 資料來源：本研究 圖 32 修正示意圖──狀況一：當Video Sample 緊接Audio Chunk 時 資料來源：本研究
