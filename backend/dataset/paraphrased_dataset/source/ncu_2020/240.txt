實驗八與對20 個Drebin 惡意家族分類的研究[19]比較，[19]為2019 年所提出的研 究，使用了Android 應用程式反編譯工具Apktool 將Android 惡意程式提取出smali 檔 案，接著使用[57]所提出的演算法，以人工的方式，從smali 檔案中提取出CFG（Control- Flow Graph）及DFG（Data-Flow Graph）二種特徵圖，之後對這二種特徵圖加上權重， 輸入至深度學習模型進行惡意家族分類，[19]在實驗中以CFG、DFG、垂直結合CFG 與 DFG 及水平結合CFG 與DFG 這些不同特徵的結合方式測試何種特徵組合對惡意家族 分類的效果最好。 本研究使用與[19]相同的實驗資料集，包含了20 個Drebin 惡意家族，分別為Adrd、 BaseBridge、DroidDream、DroidKungFu、ExploitLinuxLotoor、FakeDoc、FakeInstaller、 FakeRun、Gappusin、及Geinimi、GinMaster、GoldDream、Iconosys、Imlog、Kmin、MobileTx、 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 Opfake、Plankton、SendPay 及SMSreg，並以模型的測試準確度為進行比較。資料集內 容如表 15 所示，實驗結果如表 16 所示。在[19]的四種不同特徵結合方法中，對惡意家 族的準確度分別為僅使用CFG 的89.56%；僅使用DFG 的90.97%；以垂直方式結合CFG 與DFG 的89.90%及以水平方式結合CFG 與DFG 的94.71%，本研究方法的準確度則為 97.26%，比起[19]的最佳結果高出2.55%。 本研究方法除了在惡意家族分類的準確度較[19]高之外，也較無以人工篩選特徵的 過程，[19]使用了[57]的方法，首先以Apktool 將apk 檔萃取出smali 檔案，之後以人工 分析的方式萃取出smali 檔案中的CFG 及DFG，之後再為這些圖加上權重，最後才輸 入至深度學習模型進行分類；而本研究使用Androguard[73] 從smali 檔案及 AndroidManifest 檔中萃取出Opcode、API 及Permission 三種特徵後，即直接轉換為向量 並合成RGB 圖片輸入卷積神經網路進行分類，不須經過特徵工程。 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 表 15  [19]實驗資料集 惡意家族 數量 惡意家族 數量 Adrd GinMaster BaseBridge GoldDream DroidDream Iconosys DroidKungFu Imlog ExploitLinuxLotoor Kmin FakeDoc MobileTx FakeInstaller Opfake FakeRun Plankton Gappusin SendPay Geinimi SMSreg （資料來源：本研究） 表 16  與[19]比較實驗結果 方法 準確度 Zhiwu, et al. [19] CFG DFG Vertical Horizontal 89.56% 90.97% 89.90% 94.71% 本研究 97.26% （資料來源：本研究） 結合多特徵及深度學習擴增技術提升Android 小樣本惡意家族分類能力 五、 結論與未來研究 本章節主要回顧並總結本研究的研究問題及所提出的系統架構及解決方法，並說明 本研究的限制及未來可以改進的研究方向。
