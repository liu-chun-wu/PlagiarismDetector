The pseudo code is given in Algorithm 1. (Definition 1 Linear time decay) Given a rating matrix R (mn) consists of all records (rij, tij), with current time cur_time, each user’s rating average ui_avg and time decay function D. The time decay matrix R’(mn) consist of all users uiU time decay rating r’ij have been generated by time decay function. As follow of algorithm 1, we need to distinguish rating rij from each user’s average ui_avg first (line 3 and 9, Algorithom1). Because we need to recognize that rating whether increase or decrease to the neutrality. If rij bigger than ui_avg which means that rating will decrease by time, and vice versa. Notice that because of linear characteristic, we still need to confirm that whether the rating cross over the neutrality (line 4, 7, 10, 12, Algorithom1). Therefore, we set a restriction that the most decay degree of r’ij can only equal the neutrality. Finally, we could get adjusted rating by time decay function which represent the decay rate (line 6, 8, 11, 14, Algorithm 1). If it is a long time ago rating, the decay rate will be bigger than recent rating to approximate the neutrality. Algorithm 1 : Linear time decay Input: R: rating matrix cur_time : current time; tij: rating time ; ui_avg:  uiU rating average; D: linear time decay function; Output:  r’ij:  ui time decay rating 01: Δt: cur_time – tij 02: for each ( ui ,rij ) ∈ R do 03:  if (rij > ui_avg)    //  rating will decrease by time 04:   if (D(Δt) * (rij - ui_avg) + ui_avg) ≤ ui_avg 05:    // decay value over neutrality 06:    r’ij  ←  ui_avg 07:   else (D(Δt) * (rij - ui_avg)) + ui_avg) ≥ ui_avg 08:    r’ij  ←  (D(Δt) * ( rij - ui_avg ) + ui_avg) 09:  else (rij < ui_avg)   //  rating will increase by time 10:    if (-D(Δt) * (ui_avg - rij) + ui_avg) ≤ ui_avg 11:    r’ij  ←  (-D(Δt) * (ui_avg - rij) + ui_avg) 12:   else (-D(Δt) * (ui_avg - rij)) + ui_avg) ≥ ui_avg 13:    // decay value over neutrality 14:    r’ij  ←  ui_avg 15: end 16: output   r’ij ∈R’; In this paper, we have three linear time decay function including 1) half time decay 2) full time decay 3) double time decay. Fig. 4 demonstrate the different three linear time decay function. We detail three linear time decay functions as follows. We simulate the decay degree Δt which is from rating start time to now. 1) Full time decay function Here we use a linear function to represent the time decay as follows. D(Δt) =  1  -  (  ∂ ∙  Δt  ) (1) In Equation 1, the larger ∂ is, the stronger of the time decay’s effectiveness is. 2) Half time decay function Here we use double speed decay comparing with full time decay function as follows. D(Δt) =  1  -  ( 2 ∙ ∂ ∙  Δt ) (2) In Equation 2, we accelerate the decay rate to let user’s rating decay to be quicker to the neutrality. Also, the larger ∂ is, the stronger of the time decay’s effectiveness is. Figure 4 The demonstration of linear time decay function 3) Double time decay function Here we use half speed decay comparing with full time decay as follows. In Equation 3, we decelerate the decay rate to let user’s rating decay to be slower to the neutrality. Also, the larger ∂ is, the stronger of the time decay’s effectiveness is.
