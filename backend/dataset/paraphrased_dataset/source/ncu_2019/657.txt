基本功能塊有以下五大類Start、End、Process、Decision、Loop，參照流程圖程的基 本要素所建構，建立基本的class如圖4.2.1，ExtremePoint(Start、End)、Process、Decision、 Loop，使得MasonPy提供的基本功能塊足以實作出做基本的流程圖。 ExtremePoint(Start、End)功能塊，流程圖之中扮演的角色為藉由索引流程的起始， 和結束，輔助MasonPy有個正確的執行開始與結束。 Process功能塊事先預想DSL developer可能會做的設置行為，預先設置做基本可能的 功能method以便DSL developer設計其領域的DSL，並有適當的限制格式，因為程式運行 Decision與Loop會從中讀取變數名稱與其值，作為判斷式，判斷、變更下一步驟，也確 保User若修改輸入參數時能正確索引到變數並更改，DSL developer依照格式建構後可以 正確的執行程式。當中設定有變數設定區，公式設定區提供DSL developer建立變數及公 式；變數更動區則是能讓MasonPy使用者能夠適度的修改或輸入參數值做變更；也提供 功能塊說明區，讓創建好的功能塊有輔助說明，使得DSL developer能夠將功能塊的運算 公式或使用方式說明傳達給DSL programmer或End-User。 Decision功能塊內部建構可以索引變數功能，將變數提供給End-User選擇，以便操作 且避免End-User使用不存在的變數造成程式因無該變數而錯誤，Decision能夠讓使用者 能簡便的選擇變數、選取比較符號(>、<、=、≦、≧)、輸入比較數值，達到設定條件式， 如此一來，不必像一般在撰寫程式時，需了解程式碼後，到指定的程式碼部份安插進條 件式，Decision讓使用者設定兩條輸出線，一條往符合條件式，一條往不符合條件式方 向，Decision功能塊內部會依據條件式正確錯誤，回傳當前流程輸入的資料去判別代入 Decision中條件式的結果，它是需要往輸出線中的正確線方向或錯誤線方向運行，然後 依據輸出線連結前往，執行下一個功能塊動作。 Loop功能塊提供循環的功能，在程式設計中循環式常見的手法，附帶有兩種設定循 環的方式，計數器及終止條件方式，可選擇其一方式設定或兩種方式同時使用，條件達 到其一則會終止循環。計數器可以直接指定循環次數，終止條件方面同於Decision的方 式設定終止條件一旦達到，就結束循環，Loop功能近似於能做到while迴圈設定循環次數， 內部並寫有判斷條件，達到就break出迴圈。 圖4.2.1  MasonPy功能塊UML圖
