前面章節4.2.1 提過Process、Decision 和Loop 功能塊，MasonPy 提供抓取內部變 數，且有限度的提供End-User 進行變數輸入或條件設定，如此一來已降低操作上可能的 錯誤。 Debugger 是專為MasonPy 設計針對流程圖銜接除錯與基本功能塊輸入設置，提供 執行前的預先偵錯，經由錯誤訊息警示不完備流程圖中，告知End-User 建構流程圖上需 修改的部分，以避免浪費時間於執行錯誤的設計方式。 Debugger 結合GUI，實際操作範例呈現，如圖5.3，由錯誤訊息可以快速的了解有 過多的起始Start 功能塊，testMode 功能塊的輸出線仍未連接，結束功能塊End 未有輸 入線連結，導致流程圖不完整，而MasonPy 無法執行DSL。 圖5.4  錯誤訊息範例 六、結論與未來展望 6.1 結論 MasonPy 建構出的流程圖式DSL，使用各領域能以熟悉的流程圖方式來達到設計程 式，搭配GUI 讓End-User 在使用時不覺得像是在寫程式錯覺，而實際卻在編輯DSL， 藉由拖拉連結功能塊的方式編輯DSL，流程圖的方式讓程式架構一目了然，這種方式提 高使用者對其可讀性，快速了解程式流程與大致架構，當流程需要擴充及修改也使得設 計者較為方便；自定義功能塊提供DSL developer，自由且方便的定義、設計該領域所需 的工具的功能塊，加上Python 的模組輔助，能建構的領域及功能隨之提升；MasonPy 附 帶專用的Debugger 以輔助使用者能夠更準確的了解錯誤點，進行修正及除錯工作。 6.2 未來展望 現行MasonPy 的除錯功能僅提供GUI 使用者了解基本銜接跟格式輸入錯誤進行錯誤 訊息提示，未來展望希望能夠建構更完善的Debugger，給GUI 使用者跟DSL developer 設計DSL 兩方面，有GUI 的端Debugger 和DSL developer 用的Debugger，以增加更完 善的除錯指引，甚至建構除錯模式，在除錯模式下進行錯誤偵察。以及介面方面設想更 周延的數據表達方式，設計更多種圖表表達方式，以供使用者選擇。 參考資料 [1] Book: Martin Fowler - Domain-Specific Languages (1st Edition, Kindle Edition) [2] Marjan Mernik, Jan Heering, and Anthony M. Sloane - When and how to develop domain-specific languages .Journal:ACM Computing Surveys (CSUR) Surveys Homepage archive Volume 37 Issue 4, December 2005 [3] Paul Hudak - Modular Domain Specific Languages and Tools. Published in: Proceedings.Fifth International Conference on Software Reuse (Cat. No.98TB100203) [4]Ankica Barišić , Vasco Amaral, Miguel Goulão, and Bruno Barroca - Evaluating the Usability of Domain Specific Languages [5] Tobias Roehm, Two User Perspectives in Program Comprehension - End- Users and Developer Users. 2015 IEEE 23rd International Conference on Program Comprehension [6] Herbert Prähofer, Dominik Hurnaus, and Hanspeter Mössenböck - Building End-User Programming Systems Based on a Domain-Specific Language. [7]Book: Glover, J. Duncan/ Overbye, Thomas J./ Sarma, and Mulukutla S - Power System Analysis & Design [8] MathWorks, MATLAB 官網規格書: https://www.mathworks.com/help/pdf_doc/matlab/rn.pdf [9] MathWorks, Simulink 官網規格書: https://www.mathworks.com/help/pdf_doc/simulink/sl_gs.pdf [10] figure:Simulink https://www.youtube.com/watch?v=2J-W2PABUuA [11] F. Milano - PSAT, Matlab-Based Power System Analysis Toolbox. [12]MathWorks 官網, https://www.mathworks.com/help/simulink/custom-block- basics.html?s_tid=CRUX_lftnav [13]MathWorks 官網: Design and Create a Custom Block, https://www.mathworks.com/help/simulink/ug/tutorial-creating-a-custom- block.html#bq89h57 [14] MathWorks 官網, https://www.mathworks.com/help/simulink/slref/matlabfunction.html [15] NATIONAL INSTRUMENT, LabVIEW 官網規格書: http://www.ni.com/zh- tw/shop/labview/how-do-i-use-labview-to-teach-engineering-students.html [16] figure: Temperature Conversion in LabVIEW: https://www.theengineeringprojects.com/2017/03/temperature-conversion-in- labview.html [17] S. Souag and F. Z. Gherbi-A New Software for Power Flow Solution Computing Using LabVIEW. 2013 5th International Conference on Modeling, Simulation and Applied Optimization (ICMSAO) [18] NATIONAL INSTRUMENT 官網:Formula node, http://www.ni.com/tutorial/7572/en/ [19] NATIONAL INSTRUMENT 官網:SubVIs, http://www.ni.com/tutorial/7593/en/ [20] NATIONAL INSTRUMENT 官網, https://knowledge.ni.com/KnowledgeArticleDetails?id=kA00Z000000P9QnSAK [21] YungYu Zhuang and Jui-Hsiang Kao-A Framework for Programming in Engineering Domain. In proceedings of the 9th International Congress on Engineering and Information (ICEAI 2019), Osaka, Japan, May 7-9, 2019. [22] Konrad Hinsen - Domain-Specific Languages in Scientific Computing [23] Python 官網: Errors and Exceptions, https://docs.python.org/3/tutorial/errors.html
