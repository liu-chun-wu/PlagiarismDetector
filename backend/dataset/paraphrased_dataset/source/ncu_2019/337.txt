本論文研究在Linux Base 的系統中執行如上節所述之腳本範例所延伸的測試腳本 後，於另一台Windows 系統下（本研究使用Windows 7）開啟命令提示字元後，執行開 放資源軟體Ipmitool 和其相關功能，藉此來檢視本研究所預先建立的幾個感知器及裝置 等管理項目是否有效取得預期的數值，同時檢驗BMC 系統本身是否會因此造成系統上 的過多負擔或系統異常的產生。 在檢視執行Ipmitool 和其相關功能的結果和數據後，發現BMC 系統本身並無異常 行為產生且系統本身並未因此而增加過多的系統負擔，同時本研究所預先設立的相關管 理項目也皆可收到來自樹梅派系統以及另一台Ubuntu系統經由網路所傳來之相關資訊。 本研究所設計之管理項目於Ipmitool 中相關執行結果請參考圖4-5、圖4-6 與圖4-7；在 圖4-5 中由左至右呈現內容為裝置名稱、裝置代碼、狀態、類別以及讀值和使用單位， 而圖4-6 中由左至右呈現內容為裝置名稱、讀值、使用單位、狀態以及由小到大六個層 級的閥值設定，閥值層級請參考表4-5。本研究並嘗試利用指令調整延遲容許值以及資 料內容來驗證此機制的可行性，發現確實能有效執行和傳遞相應資訊。 圖4-5 SDR elist 呈現 資料來源：本研究整理 圖4-6 Sensor List 呈現 資料來源：本研究整理 圖4-7 事件紀錄呈現 資料來源：本研究整理 表4-5 閥值層級 資料來源：本研究整理
