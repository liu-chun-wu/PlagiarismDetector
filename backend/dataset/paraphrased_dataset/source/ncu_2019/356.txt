本研究將針對實際交易回測後的交易模型之結果進行評估，為了更進一步找出更適合利 用實際交易驗證深度學習模型的方法，將透過客製化損失函數來設法提高實際交易回測上的 收益。 3.8.1 客製化損失函數 本研究為了使深度學習預測模型能夠更加貼近實際交易需求之結果，根據嘗試，使用傳 統的MSE 並無法真正的以股價方向為目標進行學習，但是Keras 內建之損失函數能夠調整 的參數與功能有限，所有包含在Keras 中的預設損失函數都侷限在僅能針對y_true 及y_pred 去進行計算(Keras, 2018)，無法達到本研究預期之目的，然而根據Keras 所提供之敘述，只 要是符合TensorFlow 或Theano 的Backend 的格式即可做為替換使用，因此本研究決定捨棄 Keras 的內建損失函數，改採用開源程式庫TensorFlow 撰寫客製化損失函數。 研究中所使用的客製化損失函數是基於MSE 進行修改，以不變動原始設計的條件下， 添加微調項目，因為損失函數在計算上的目標為誤差最小化，因此當預測方向與實際方向相 同時，則減少懲罰值，反之，當預測方向與實際方向不同時，則增加懲罰值，當懲罰值上 升，就表示離目標遠離，當懲罰值下降，則表示離目標接近，以此來幫助模型能夠學習到正 確的方向。本研究所設計之客製化損失函數的計算步驟如下： 一、利用tf.manip.roll 函數將實際值(y_true)與預測值(y_pred)的Tensor 複製一份另外存 放並且進行滾動(roll)，便可得到滾動一日之實際值(y_true_1)與滾動一日之預測值 (y_pred_1)，做為前一日股價之價格。 二、將實際值與預測值之Tensor 數據與相對應之前一日股價的Tensor 數據（滾動值） 相減。 三、透過將兩者相減，進而計算出一日之價差（殘差），便可得出實際方向(trueD = y_true – y_true_1）與預測方向(predD = y_pred – y_pred_1)之兩項殘差值。 四、當實際方向與預測方向相乘<0 時，則代表方向錯誤，反正兩者相乘>0 則為方向正 確。 五、當方向錯誤時則增加懲罰值，反之當方向正確時則減少懲罰值。
