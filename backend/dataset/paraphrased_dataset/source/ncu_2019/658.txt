功能塊之間的資料傳遞由為重要，當流程傳遞當中有資料遺失，將會造成流程資料 缺失而運算錯誤，甚至整個程式執行錯誤。 MasonPy基本功能塊設定的物件為ExtremePoint(Start、End)、Process、Decision、Loop， 功能塊在銜接時程式內部會去檢查是否為符合程式內部的預設基本的物件，防止任意檔 案充當功能塊所造成格式不同的錯誤，依據設計格式也使得Decision、Loop能確保正確 的索引到變數名稱與值，使得功能塊間銜接與執行能夠正確，也促使End-User在Process 輸入變數值功能能夠正確，以及Decision、Loop在索引變數與值的過程也能無誤。建立 自定義功能塊的格式其實也並不複雜，如圖4.2.1，以物件導向的方式繼承Process後，將 自行撰寫所屬領域的DSL，變數與值、公式或演算法、功能塊敘述說明……等依序放入 Process以建構好的指定method中，使得各method所提供的功能塊正確發揮。 MasonPy是基於Python之上建構的，而Python語言的一個特性——動態型別(dynamic type)特性，通常動態型別最明顯的優點就是，省去了宣告型別的程式碼，簡化DSL developer的開發，可以大大提升程式碼的簡潔程度，進而降低開發成本，不同於像是 MATLAB或LabVIEW的使用一樣，有著嚴格的資料型態限制，雖然可以有助於讓開發者 減少錯誤，但也使得在設計過程可能會較為繁雜，MasonPy以Python的特性，提升了變 數使用的自由度，省去許多運算過程中資料型態轉換繁雜動作。
