根據4.2 章節所敘述之問題分析以及本研究聚焦於探討伺服器上的BMC 系統和 Linux 架構的智能家電系統之間是否能透過無線網路來傳遞資訊。因此，在程式軟體設 計方面主要有以下重點和步驟： 1. Sensor Number／Sensor ID 的重新規劃 本研究重新檢視了所有Sensor Number／Sensor ID 的分類和編排依據，針對相關類 別以及特性將Sensor Number／Sensor ID 做了重新的編排，並留下連續的區段作為 本研究所用，也使得Sensor Number／Sensor ID 的分配更加清楚和具有規劃性。在 本研究實驗設計中僅將Sensor Number／Sensor ID 編號7Fh 至83h 留做實驗設計所 用，而實務面上經過前期規劃和重新編排亦可留下更多且完整的連續區塊來作為彈 性使用及使用者或開發者自行使用之區塊。 2. 利用可供自行運用的Sensor Number／Sensor ID 來建立管理項目 主要利用規劃予使用者或開發者自行運用的Sensor Number／Sensor ID 先行建立和 設定所需的管理項目，讓使用者或開發者在BMC 系統運行後，可以使用指令來調 整管理項目的細節以及依照需求來選擇適當的管理項目。本研究在系統實作開發上 使用美商安邁所發行之BMC 系統開發軟體MegaRAC®  SP-X BMC Firmware 來預 先建立5 個簡單的管理項目，請參考下方圖4-2 以及表4-3。 圖4-2 User Device SDR 建立範例 資料來源：本研究整理 表4-3 外部管理項目列表 感知器／裝置名稱 （Sensor Name） 感知器／裝置代碼 （Sensor Number） 單位 User_RoomTemp1 0x7F degrees C （攝氏溫度） UserDev_Temp2 0x80 degrees C （攝氏溫度） UserDev_RPM 0x81 RPM （每分鐘轉速） UserDev_Percent 0x82 percent （百分比） UserDev_Volt 0x83 Volts （伏特） 資料來源：本研究整理 3. 設計與開發智慧居家或外部系統所用之指令 在本研究設計架構中，智能家電和外部系統將透過特別設計的指令來傳遞訊息給予 BMC 系統，藉此達到資訊共享的目的。在本研究中的指令設計內容請參考下方表 格表4-4。 表4-4 本研究設計之智慧居家專用指令 網路功能代碼（Net Function Code） 指令代碼（Command Number） ：0x30 ：0xE7 需求資料 參數名稱 說明描述 Byte 1 感知器或裝置身分代碼 （Sensor Number／Sensor ID） 在BMC 系統中所設定的感知 器或裝置ID 代碼 Byte 2 網路延遲容許值 （Network Delay Time） BMC 系統將根據此參數來做 為資訊傳遞延遲時是否判定為 數據遺失以及錯誤的依據 Byte 3 傳送資料長度 （Data Length） 在本次指令中預計傳送的資料 長度，最大不可超過250 Bytes Byte 4 | Byte N 裝置或感知器資料 （Device Data／Sensor Value） 裝置或感知器所要傳送的資 料，資料數必須和Byte 3 所需 之傳送資料長度參數相符 資料來源：本研究整理 4. BMC 系統內的資訊整合和處置 當BMC 系統收到智慧居家或外部系統傳送如前述所提及之指令時，必須將網路延 遲容許值以及裝置或感知器的資料取出並搭配感知器或裝置身分代碼來導入相對 應的管理項目中。在此環節中的關鍵主要在於網路延遲容許值的使用以及感知器或 裝置數值的取代和獲取。BMC 系統通常設定為每一秒為一個監控循環或者稱之為 掃描週期（Monitor Cycle），在每一次掃描週期（Monitor Cycle）執行後，利用專用 指令所取得的感知器或裝置數值來取代現有的數值，如此便能將利用指令所獲得的 資訊導入管理項目中。而網路延遲容許值的使用則在於當無法在每一秒都獲得來自 專用指令的數據時，會根據網路延遲容許值的數值來當作判斷依據。當數據的延遲 還在容許值內時，管理項目的數值會以上一次有效的數值為依據，而不會因為新的 資訊或數值無法在一秒內亦即一個掃描週期內取得，進而被BMC 系統判定為錯誤 或監控項目無法取得相應資訊。本研究利用增加程式變數來暫存有效的數據和記錄 無法取得數據的監控循環次數，並以此和網路延遲容許值作比較和搭配來完成目的， 程式流程示意圖請參考圖4-3。 圖4-3 程式流程示意圖 資料來源：本研究整理
