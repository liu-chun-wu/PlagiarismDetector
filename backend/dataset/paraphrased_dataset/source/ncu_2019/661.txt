Debugger 分成兩個層面去看，一個是提供給領域程式設計專家(DSL developer)，另 一個是提供給非程式專家(GUI 端使用者)，為了方便除錯特意為MasonPy 設計專用的UI 端的Debugger，提醒使用者GUI 操作上錯誤，包括功能塊的多餘或缺少、連接方式錯 誤:連接線的多餘或缺少、判斷功能塊參數錯誤、循環功能塊參數錯誤。 程式異常有許多種類，當異常事件在程式執行過程中發生，將影響了程式的正常執 行。一般情況下，在無法正常處理程式時就會發生錯誤，表示有異常。需要從scripts 發 生異常時我們需要捕獲處理它，否則程式將會因為設計錯誤終止執行。 使用者在操作程式時，可能為非程式設計專家，未必對程式設計有所了解，可能在 設計的過程中得到了錯誤訊息，如TypeError、SyntaxError、AttributeError……，他們可 能對這些術語所代表什麼，未必能了解，甚至不知從何地方下手進行修正。 在此Debugger 的設計藉由Python 內建的Exception，進行繼承後，針對MasonPy 的 不符其使用的操作進行限制，針對流程圖必備的條件設定，加以定義各個針對性問題的 Exception， 以提醒錯誤訊息，必將錯誤訊息內容編寫成更白話，如此能讓End-User 閱 讀更簡單明瞭的話語，使其得以快速且正確的找到錯誤點進行修正，錯誤偵測項目及錯 誤訊息提示如表4.4，內容包括針對流程圖之建構予以功能塊缺失檢測、銜接檢測、輸 入設定檢測。 我們針對流程圖的設立一些Exceptions [23]，包括功能塊是否缺少、連接線是否符 合該功能塊所應該連接的數量、Decision 和Loop 輸入設定是否正確，藉由Python 內建 Exceptions，加以繼承建構專用於MasonPy 的錯誤訊息，UML 設計如圖4.4。 Error: 端點錯誤 數量不足 數量過多 檢查項目 錯誤訊息 檢查端點Start 數量 缺少 Start Start 僅能有一個 檢查端點End 數量 缺少 End X Error:  連接 線錯誤 輸入線數量不 足 輸入線數量過 多 輸出線數量不 足 輸出線數量過 多 檢查項目 錯誤訊息 檢查Start 連接 線數量 Start 不得有輸 入線 Start 不得有輸 入線 Start 缺少輸出 線 Start 僅能一條 輸出線 檢查End 連接 線數量 End 缺少輸入 線 X X End 不得有輸 出線 檢查Process 連 接線數量 Process 缺少輸 入線 X Process 缺少輸 出線 Process 僅能一 條輸出線 檢查Decision 連接線數量 Decision 缺少 輸入線 X Decision 輸出 線必須為兩條, 目前不足?條 Decision 輸出 線僅能兩條,目 前過多 檢查Loop 連接 線數量 Loop 缺少輸入 線 X Loop 輸出線必 須為兩條,目前 不足?條 Loop 輸出線僅 能兩條,目前過 多 Decision 參數設定錯誤 檢查項目 錯誤訊息 檢查Decision 條件式 條件式  比較值錯誤 Loop 參數設定錯誤 檢查項目 錯誤訊息 檢查Loop 終止條件式 條件式  比較值錯誤 檢查Loop 的Counter Counter 錯誤 檢查Loop 是否有條件式或 Counter 至少須設定 條件式 或 Counter 表4.4  Debugger 檢測項目及錯誤訊息表 圖4.4  Exception 設計UML 圖 五、評價 MasonPy 為一提供建構小型流程圖式DSL 的DSL framework，建構出來的DSL 搭配 GUI 使End-User 操作方便，上手容易，程圖式的DSL 它想做到的就像流程圖想表達的， 直觀反映出設計的流程內部控制的特徵，有助於理解複雜的過程，並快速了解根據這些 決策制定與採取的步驟，流程圖的方式較方便發現設計及修改，流程架構可讀性高，容 易移交工作。這些是MasonPy 主要設計方向，能達到一目了然的程式架構，簡單的操作 及編輯，容易擴充與修改的特性，畫一張流程圖就能編寫程式。MasonPy 並且提供DSL developer 開發DSL 的母模板，DSL developer 可以將變數設置、運算內容、功能塊簡 介…..等，放置母模板對應的method，即可簡易達到功能塊擴充。 本章將以底下幾個層面進行評估，End-User 操作program、DSL programmer 應用DSL 建構program、DSL developer 藉由DSL framework 開發DSL 及Debugger。
