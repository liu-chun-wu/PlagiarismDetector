In this paper, our idea is extended to discover the latent preferences of users and characteristics of items by NMF to efficiently decompose the latent matrices. Given a data matrix R = [r1, ··· , rn] ∈ ℝ𝑚×𝑛. Suppose d dimension vectors piℝ𝑑 and qjℝ𝑑 denote the vectors of latent preference of each user and characteristic of each item, respectively. P (md) represents the preference matrix of all user latent vectors pi, 1≤ i ≤ m; Q (nd) represents the characteristic matrix of all item latent vectors qj, 1≤ j ≤ n. Usually d is chosen to be smaller than m or n, so that P and Q are smaller than the time decay matrix R. NMF is a matrix factorization algorithm that find the positive factorization of given positive matrix. Assume that the given a rating matrix R consists of all records (rij). Here the goal is to factorize R into the non-negative P (md) matrix and the non- negative Q (nd) matrix. We need to define the objective functions L that quantify the quality of approximation to minimize the functional and find an approximate factorization  𝑅≈𝑃× 𝑄  such that : 𝐿= ‖𝑅−𝑃𝑄𝑇‖𝐹 (7) where‖∙‖𝐹 denotes the matrix Frobenius norm. Although the objective function L in Equation 7 is convex in P only or Q only, it is not convex in both variables together. Therefore, searching for an algorithm to find the global minimum of L is difficult. Lee & Seung [24,25] presented an iterative update algorithm as follows: 𝑝𝑖𝑗 𝑡+1 = 𝑝𝑖𝑗 𝑡 (𝑅𝑄)𝑖𝑗 (𝑃𝑄𝑇𝑄)𝑖𝑗 (8) 𝑞𝑖𝑗 𝑡+1 = 𝑞𝑖𝑗 𝑡(𝑅𝑇𝑃)𝑖𝑗 (𝑄𝑃𝑇𝑃)𝑖𝑗 (9) It is proved that the above update steps will find a local minimum of the objective function L. Actually in reality, we have d ≪ m and d ≪ n. Thus, NMF essentially try to find a compressed approximation of the original data matrix, 𝑅≈𝑃× 𝑄 . We can view this approximation column by column as follows: 𝑝𝑖≈∑𝑝𝑗𝑞𝑖𝑗 𝑑 𝑗=1 (10) Where 𝑝𝑖 is the j-th column vector of P. Thus, each data vector 𝑟𝑖 is approximated by a linear combination of the columns of P, weighted by the components of Q. Therefore, P can be considered to contain a foundation that is optimized for the linear approximation of the data in R. Since relatively few foundation vectors are used to represent many data vectors, good approximation can only be achieved if the foundation vectors discover structure that is latent in the data.
