The datasets and data pre-processing procedure are discussed as in Table 1. We detail as follows. TABLE 1 MOVIELENS 100K, 1M [42] dataset no. of users no. of movies no. of ratings no. of months rating range MovieLens 100K 56,128 100,000 1-5 MovieLens 1M 6,040 35,151 1,00,209 1-5 Table 1 MovieLens 100K, 1M To evaluate the effectiveness of our proposed method, we use well-known six metrics as follows: Mean square error, Root Mean Square Error, Mean absolute error, Accuracy at K, Precision at K, Recall at K, F1 score at K (denoted by MSE, RMSE, MAE, ACC@K, P@K, R@K, F1@K respectively) where K is the quantity of recommendation results. To validate the proposed Dec_NMF in real-world environments, in this section, we conduct our experiments on two real datasets. MovieLens 100K and 1M datasets are provided by Grouplens [42]; The datasets and data pre-processing procedure are discussed as in Table 1. After preprocessing, MovieLens 100K and 1M datasets contain 590 and 6,034 users, 4,569 and 3,260 movies, respectively; The range of system rating is 1-5. The time intervals of MovieLens 100K, MovieLens 1M, are 8 (1997/09 ~ 1998/04) and 36 (2000/04 ~ 2003/03) months, respectively. Every record in the data consists of user ID, movie ID, timestamp, rating. Since all datasets are sparse, we filter out the users who interact with system less than 30. Also, movies with less than 20 rated are excluded. We choose K = 100 to illustrate the results of metrics at K. Note that for an instance in the testing set, ACC@K is 1 if the item appears in the set of Top-K MF- based recommendation, and 0 otherwise. The overall ACC@K is calculated as the average value of all testing instances. Suppose for user ui, Test_ratingui denote the set of corresponding rated items in the testing data, and Recom_setui denotes the set of recommended items, the definitions of P@K, R@K and F1@K are described in Equation 11, 12, 13. P@K = 1 |𝑈| ∑ |𝑅𝑒𝑐𝑜𝑚_𝑠𝑒𝑡𝑢𝑖∩𝑇𝑒𝑠𝑡_𝑟𝑎𝑡𝑖𝑛𝑔𝑢𝑖| |𝑅𝑒𝑐𝑜𝑚_𝑠𝑒𝑡𝑢𝑖| 𝑢𝑖∈𝑈 (11) R@K = 1 |𝑈| ∑ |𝑅𝑒𝑐𝑜𝑚_𝑠𝑒𝑡𝑢𝑖∩𝑇𝑒𝑠𝑡_𝑟𝑎𝑡𝑖𝑛𝑔𝑢𝑖| |𝑇𝑒𝑠𝑡_𝑟𝑎𝑡𝑖𝑛𝑔𝑢𝑖| 𝑢𝑖∈𝑈 (12) F1@K = 1 |𝑈| ∑ 𝑝𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛+ 𝑅𝑒𝑐𝑎𝑙𝑙 𝑢𝑖∈𝑈 (13) On the other hand, MSE basically measures average squared error of our predictions. For each point, it calculates square difference between the predictions and the target and then average those values. The higher this value, the worse the model is. RMSE is just the square root of MSE. The square root is introduced to make scale of the errors to be the same as the scale of targets. In MAE, the error is calculated as an average of absolute differences between the target values and the predictions. The MAE is a linear score which means that all the individual differences are weighted equally in the average. MSE RMSE MAE are defined by the Equation. 14, 15, 16. MSE = 1 |𝑈| ∑(𝑟𝑖𝑗−𝑝𝑖𝑞𝑗) 𝑢𝑖∈𝑈 (14) RMSE = √ |𝑈| ∑(𝑟𝑖𝑗−𝑝𝑖𝑞𝑗) 𝑢𝑖∈𝑈 (15) MAE = 1 |𝑈| ∑|𝑟𝑖𝑗−𝑝𝑖𝑞𝑗| 𝑢𝑖∈𝑈 (16) We demonstrate the performance of proposed Dec_NMF model comparing to traditional MF, NMF and different time decay function. All models are implemented on Tensorflow. To evaluate the impact of latent factor number, we choose latent factor number {50,100,200,500}.
