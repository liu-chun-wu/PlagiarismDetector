本節說明本實驗的硬體規格及撰寫程式使用軟體。中央處理器採 用Intel Core i7-7700 2.8/3.8GHz，並搭載8G 記憶體。作業系統為微 軟64 位元的Windows 10 家用版。主要系統建構的開發軟體如下： 1. 使用Microsoft Visual Studio 2015，用C++語言。程式main 進 入點。 2. 搭配OpenCV3.43 這套開放式函式庫撰寫影像處理程式。其中， ML module，我們使用kNearest 來做先期的字元辨識，SVM， 來學習與判定影像中是否含有車牌。另DNN module 分別引用 在tensorflow 及darknet 訓練好Model 檔(*.pb)來做預測。 3. 建立anaconda python/tensorflow-gpu 使用jupyter notebook 開 發CNN，並訓練與驗證模型。 4. 依據Windows and Linux version of Darknet YOLO v3 & v2 Neural Networks for object detection 的 說 明 (https://github.com/AlexeyAB/darknet) ，安裝 CUDA10.0 及 cudnn10.0.130_411.31_win10，將darknet C 原始碼在Microsoft Visual Studio 2015 建置。以利YOLO 訓練。 5. 同樣Windows and Linux version of Darknet YOLO v3 & v2 Neural Networks for object detection 的說明，建置了可預測的 YOLOv2 DLL。此DLL 將被專案加入參考(reference)。只要呼 叫detect 函數引用訓練好的YOLO Model 及組態檔就可針對 停車場入口之車牌影像辨識 訓練辨物件的類別進行偵測。
