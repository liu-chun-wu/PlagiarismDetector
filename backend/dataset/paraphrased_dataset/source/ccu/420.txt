在3.3.7節，我們運用了YOLO v2物件偵測去找出字元的位置並將 之截取再經CNN神經網路辨識。這是將所有34個字元均視為同一類別。 這節我們嘗試直接將34個字元就分成34類（I,O排除），在標註標 籤時類別代號就不是只有0，會依照0、1、2…9、A、B、…、Z順序編 號。在YOLO組態檔中均與偵測車牌、偵測車牌字元位置的組態檔大 致相同，除了配合偵測34類，所以classes=34，及輸出的tensor，所以 filter=(5+34)*5=195。 停車場入口之車牌影像辨識 圖 59 YOLO_mark 標註車牌34 類字元位置 資料來源:本研究整理 圖 60 標註標籤檔案 (包括物件編號及4 個幾何位置，編號視框的字元而不同) 資料來源:本研究整理 圖 61 charDirectRec.data 檔內容 資料來源:本研究整理 停車場入口之車牌影像辨識 圖 62 traincharDirectRec.txt 內容 資料來源:本研究整理 traincharDirectRec.txt 內容為參與訓練的圖檔路徑，標籤檔如圖 60，也在同目錄。charDirectRec.names 檔內容就是要偵測物件的名 稱，第一列為第一類物件名稱，第二列為第二類物件名稱，…。 用下列指令開始訓練： darknet.exe detector train data\charDirectRec.data cfg\YOLO- DirectRec2.cfg  defaultWeight\darknet19_448.conv.23 圖 63 YOLO 直接辨識車牌上的字元iterations=15000，avg. loss=0.0775 資料來源:本研究整理 停車場入口之車牌影像辨識 第四章 實驗結果與討論
