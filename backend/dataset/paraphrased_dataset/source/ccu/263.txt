由3.2.3 可知，FOL 推論主要由三部分組成：（1）模糊數據庫(fuzzy database)， （2）規則和公理，（3）推理引擎。如同前兩章所述，當一個人是某個領域的愛好者 或是專家，它能提供的答案往往比較正確。故推論的目的是將由數字表示的興趣關 鍵字，準確地將節點回答問題的能力表示出來。模糊數據庫是用來存儲有關係的 詞，包括在節點基本資料中的資訊，如subset(x)、alias（x）。例如，Related(music) = jazz, Subset(亞洲,美洲), Alias(United Kingdom) = UK。規則和公理可以以現有 的資訊推論出結果，換句話說，規則和公理為FOL 推論提供基本的邏輯公式。假 設，給定一個規則為” Place（x）∧ Subset（x）= y ⇒ expert（y）”，其中Place （x1）存在於一位用戶的FOL 推理機，且Subset(x1)= y1 存在於模糊數據庫中，那麼 可以推斷該用戶是y1 的專家。例如，如果April 住在東京，且東京是日本城市的一 個子集，可以推論April 應該善於回答日本的問題。 由上可知，許多不相關、不明顯的訊息散布在分散式系統中，使用FOL 推理機 檢查規則後，可以找到相關但不是很直觀的信息。它將每個興趣都設定為一個推理 目標並建立點陣推理結構。如圖6 所示，所有的FOL 符號連接到所有的目標，每個 節點的都是FOL 語意符號，箭頭代表連接語意符號的連接符號。透過問題（或用戶 的社會信息）的語意符號映射到模糊數據庫，便可以從基本元素追溯到最終目標。 例如，如圖6 中的灰色框所示，語法符號Male（John）和Activity(Camera) 全部使 用箭頭指向目標3C-Accessories。也就是說，如果這些三個語法符號Tom 都滿足， 推理機便可以推斷出John 的條件滿足3C-Accessories，意即John 可以回答關於3C 周邊的問題。 圖 6 推論機如何推導興趣 資料來源: 本研究整理 接下來，介紹如何生成以數字串的形式表示問題ID 和興趣ID。先前討論在通 過推理引擎之後，FOL 表示法被轉換為問題（或用戶）的興趣表，如圖4 和圖5 這 兩張圖中的步驟3 所示，問題（或用戶的興趣）被轉換為數字串以表示問題（或用 戶）的知識領域。 圖 7 興趣陣列 (興趣ID) 資料來源: (Li, et al., 2012) 與本研究加以整理 現在要討論如何將解析過興趣表生成字串成為問題(或用戶)的興趣ID，圖7 顯 示興趣陣列如何對應生成興趣ID。第一行列出系統中所有的興趣類別，例如電影、 音樂、職業…等。每一個類別中的不同興趣在類別的列中按字母順序排序。每一個 類別的興趣都會標示一個索引數字，每一個數字的位置對應每個類別，數字的值表 示對該類別內對應到的興趣。例如，字串”122024462…”表示日本，自助，韓國烤 肉…“。當數字字串被生成時會檢查表中的每一個類別，如果有符合問題(或用戶)的 興趣，生成的數字就是該興趣所在該類別的位置。否則，如果該類別下的興趣不符 合問題(或用戶)的需求，字串中該類別的位置設置為0。再者，如果用戶/問題的興 趣可以匹配特定類別中的任和興趣，則相應的數字被設置為∞。如果用戶/問題在同 個類別中有幾個興趣， 則用” | ”來連接該類別中的興趣索引。例如圖7，字 串 ”3|2|111023150”表示“日本|美國|韓國, 跟團,泰式蝦餅,…“。 從FOL 設計中解析出興趣關鍵字，再從關鍵字推論出興趣ID，無論是從問題 本身推論出來的問題ID，或是經由用戶的社交資料推導出的興趣ID，我們可以確 認，這兩組(問題或用戶)的所推斷出來的興趣如果彼此相似的話，他們會有類似的 興趣ID。 此外，用戶會定期更新自己的資料，包含他們的問題和回答質量統計到伺服器 中。並基於這些數據，系統可以添加規則和公理並更新每個節點的數據，以反映系 統中用戶最新的行為。這些更新的規則和公理是遠端配置到手機用戶，未來將使用 其他技術來改善FOL 規則的推理對大規模分散式資料庫的可擴展性，留待將來的研 究中。
