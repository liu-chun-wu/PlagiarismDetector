Maksy Sendiang (2016)提出若開發工具使用為PHP，則可使用PDO(PHP Data Object)的延伸模組進行SQL 的指令存取，PDO 是使用C/C++開發而成的PHP5 延伸 套件，優點包含安裝容易、執行效能高。而主要使用PDO 延伸模組原因是此模組支 援的資料庫模組較靈活且安全性較高。 於PHP5 發行後推出了PDO(PHP Data Object)這個延伸模組(Sherriff, 2008)，其 中此模組最值得推薦的是正在他提供的相當彈性以及安全的傳輸模式，使它的效率雖 然較慢一些，但也是目前較為推薦的連線手法，整體出這麼模組的特點如下： 高彈性：PDO 開發語法上成功達到只需要調整資料庫連線語法的調整，其他的 運行作業上皆無任何調整便可順利在各種類型資料庫上進行彈性轉換。 高安全性：PDO 開發模式提供了完整的prepare command 的模組設計師使用，且 在此模組底下會自動進行字串的消毒過濾機制，使其SQL injection 的相關攻擊手法無 法順利發動運行。 主要防護SQL Injection 的注入攻擊手法，是PDO 模組中提供了SQL 語句利用參 數方式進行組合使用方式，此方式的程式寫組合可以有效性的針對各個參數進行過濾 與檢測，將可有效排除SQL Injection 導致是危害問題。若是使用ASP.net 為工具，也 有Prepare Command 指令可以達到相同的效果陳明照 （民103）。以下列列出了兩個 PDO 的使用例子，分別為有效使用與無效使用的例子。 有效防護SQL Injection 撰寫方式(圖7)： 圖 7 有效使用PDO 模組防護 資料來源：本研究整理 無效防護SQL Injection 撰寫方式(圖8)： 圖 8 無效使用PDO 模組防護 資料來源：本研究整理
