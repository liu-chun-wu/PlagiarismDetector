YOLO 系列 (You only look once, YOLO) 是關於物件偵測 (object detection) 的類神經網路演算法，以darknet架構實作，darknet 是一開源的神經網路框架，實作該框架的作者Joseph Redmon用C及 CUDA撰寫，沒有用到任何著名深度學習框架，輕量、依賴少、演算 法高效率。本研究依照官網(https://github.com/AlexeyAB/darknet)說 明，以MSVS 2015, CUDA 10.0, cuDNN 7.4 及OpenCV 3.42 將 darknet.sln及其原始碼建置成darknet.exe。此執行檔即可用來訓練和 停車場入口之車牌影像辨識 預測自己想辨識的物件。 圖 45 訓練範例圖做標籤 資料來源:本研究整理  官網https://github.com/AlexeyAB/YOLO_mark，提供製作學習範例 做此標籤的工具，YOLO_mark.exe。 圖 46 在6898 iterations 時截圖 資料來源:本研究整理 停車場入口之車牌影像辨識 圖 47 iterations=20000，avg. loss=0.0023 資料來源:本研究整理 在圖46，我們可看出訓練一開始loss由4.5以上到截圖時已降致 0.0036，共訓練了64x6898=441472。其中64為batch，一次訓練的批量。 每 100 次 會 儲 存 當 時 權 重 ， YOLO_car2_100.weights ， YOLO_car2_200.weights，YOLO_car2_300.weights，直到45000次，會 儲存成YOLO_car2_final.weights。 以上訓練好的權重*.weights 及組態檔*.cfg ，我們運用OpenCV DNN module的readNetFromDarknet(modelConfiguration, modelBinary)載入，經 以下幾列指令： Mat inputBlob = blobFromImage(srcImg, 1 / 255.F, Size(416, 416), Scalar(), true, false); YOLONet.setInput(inputBlob, "data"); Mat detectionMat = YOLONet.forward("detection_out"); 我們設定confidence 閥值0.25。大於0.25閥值者視為車牌物件，由取 得它的中心點座標及其寛高。分別乘上整張汽車影像寛高即可得正確 的車牌位置，將其截取即為車牌的影像。 因OpenCV目前不支援GPU、CUDA，而Darknet提供了可用於預 停車場入口之車牌影像辨識 測(forword)的動態連結程式庫(dll)，Detector detector(modelConfiguration, modelBinary)，在主程序中連結呼叫， 將汽車影像Mat格式代入，std::vector<bbox_t>result_vec = detector.detect(srcImg)，即可取得正確的車牌位置，將其截取即為車 牌的影像。為了可將YOLO detector宣告為global，便於整體程式有 多樣參數。將Detector的建構式新增不用立即load weights及 configuration。即Detector detector()，在選項確定導入時再呼叫 detector.init(modelConfiguration, modelBinary)。
