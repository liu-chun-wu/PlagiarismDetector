本文使用某科技公司提供之停車場汽車影像資料庫共計1604 張， 在驗證車牌和字元辨識方法中將影像資料分成訓練集和測試集，訓練 集和測試集每張影像再另產生5 張合成影像，分別是1 張切除向右及 向下0~3 像素的影像再擴展成原尺寸，1 張以仿射矩陣，仿射成原尺 寸，3 張-8~+8 度動態旋轉影像，如圖28 所示。 仿射矩陣公式如下: (16) {𝑥′ = 𝑥+ 𝑠ℎ𝑖𝑓𝑡 𝑦′ = 𝑦+ 𝑠ℎ𝑖𝑓𝑡 所以最後訓練集和測試集車牌影像合計9624張。 原圖 截取右下圖再放大 截取左上圖再放大 -8~+8 度動態旋轉影像 停車場入口之車牌影像辨識 -8~+8 度動態旋轉影像 -8~+8 動態旋轉影像 圖 28 影像的生成 資料來源:本研究整理 在初期階段，截取可能車牌區域影像全部儲存在一個目錄，再手 工將確實有車牌的影像分到has 目錄，沒有含車牌的影像分到no 目 錄。 圖 29 有車牌與無車牌影像手動分類 資料來源:本研究整理 再如前述，每張影像再另產生5 張合成影像。 停車場入口之車牌影像辨識 圖 30 含車牌影像合成圖 資料來源:本研究整理 分別在SVM 與CNN 有無車牌判斷預測上做為學習範例。 同樣字元辨識CNN 訓練，我們也在未含辨識功能時，選擇一些車牌其車牌 字元包含0-9，A-H，J-N，P-Z（即去除I，O 字元），將分割字元儲存下來，手動 將24 個字元貼上白色底png 檔。如下圖：我們運用Opencv ml module 的kNearest 來學習辨識字元。 圖 31 KNN 訓練的影像圖 資料來源:本研究整理 停車場入口之車牌影像辨識 圖 32 KNN 訓練的影像對照文字 資料來源:本研究整理 配合Opencv 將對照文字檔依左至右，上至下順序讀取每一字元轉 成整數存入一列的32FC1 格式cv::Mat matClassificationInts，最後 轉存class.xml 檔。 並且對字元圖檔*.png 做一些前處理，二值化取輪廓，取每一輪廓最 小矩形，依矩形中心點座標左至右，上至下順序，依序截圖並轉成 相同20x40 的尺寸，轉成32FC1 格式，再轉成1x800 存入cv::Mat matTrainingImages 檔，最後轉存image.xml 檔。 執行kNearesttrain(matTrainingImages, cv::ml::ROW_SAMPLE, matClassificationInts)。要預測時，將欲預測影像二值化，轉成 20x40 的尺寸，轉成32FC1 格式，再轉成1x800 存入matROI 。執 行cv::Mat kNearestfindNearest(matROI, 1, matCurrentChar);在 matCurrentChar.at<float>(0, 0)的值即位字元的ASCII 值。KNN 本質 上是預測時才去比較最接近的，不適用大量範例。 利用KNN 來辨識字元，因其較易製作，範例不需太多，依KNN 的判定將字元分存於各目錄，再手工校正。對較大量的影像，如此 會較容易也較有效率。各字元再如前述，每張影像再另產生5 張合 成影像。 停車場入口之車牌影像辨識 圖 33 各字元影像各儲存至其目錄 資料來源:本研究整理 圖 34 每張字元影像再另產生5 張合成影像 資料來源:本研究整理 停車場入口之車牌影像辨識
