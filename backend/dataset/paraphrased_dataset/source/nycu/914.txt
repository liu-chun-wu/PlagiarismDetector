HAProxy 是由法國人Willy Tarreau 於西元2000 年以C 語言所撰 寫出的開放原始碼軟體，發展至今已是第19 個年頭，是為數眾多軟 體式負載平衡的翹楚之一，官方文件說明設計以承載10000 個以上 使用者同時連接的高性能[18]，並且以OSI 網路模型中的第四層 （Transport Layer）與第七層（Application Layer）實現負載平衡功 能，特性為安全、易於架設、功能強大且支援多數作業系統平台， 在各大知名的網站如：Amazon、GitHub、Twitter 等都有在使用 HAProxy，可信度是有目共睹的。 而目前HAProxy 平台環境的版本為1.6.3，所支援的負載平衡演 算法共有9 種[19]，分別為roundrobin、static-rr、leastconn、first、 source、uri、url_param、hdr、rdp-cookie 9 種演算法，以下將分別說明 各個演算法的運作方式： ●roundrobin：輪詢，按照順序輪流分配外部請求至後端及群中的各 個伺服器，不管伺服器的條件，一致均等的配發需求，為動態負載 平衡演算法。 ●static-rr：依據權重的輪詢，依據所設定的權重進行輪流分派外部 請求至後端集群中的各個伺服器，故可設定權重值，是一種靜態負 載平衡演算法。 ●leastconn：最少連接數的分派，循環在後端集群伺服器中分派流量 至相同負載的伺服器上，以確保後端伺服器有平均的負載在處理工 作，適用於需較長Session 時間的連線，如LDAP、SQL，較短 Session 時間如：http 就較不適合，屬於動態負載平衡演算法。 ●first：使用較低指定id 的分派，id 值可自行指定，由最小的號碼 開始分派工作，一但到達可處理數量（maxconn），即改派發至下一 個叫大數值的伺服器id 處理，id 值與maxconn 為可指派數值，屬於 靜態負載平衡演算法。 ●source：計算來源位址的hash 值分派，此演算法能確保連線為同一 來源IP 位址分派於後端同一伺服器，不以cookie 為判斷，此演算法 有很好的固定分派功能，屬於靜態負載平衡演算法。 ●uri：計算URI 左側hash 值分派，計算方式取用URI 問號之前或整 串URI 作為hash 計算，可以固定同一來源至後端某一台伺服器，此 算法因取用URI 位址，故只能用於HTTP 協議，屬於靜態負載平衡 演算法。 ●url_param：以URL 參數分派，利用所設定的特殊字串，於HTTP GET 或者POST 搜循特定參數值分派於固定伺服器，如果沒有搜尋 到參數值則為輪詢方式運作，屬於靜態負載平衡演算法。 ●hdr：特定參數值分派，搜尋HTTP Header 中的<name>後固定派發 至後端特定伺服器，如果沒有搜尋到參數值則為輪詢方式運作，屬 於靜態負載平衡演算法。 ●rdp-cookie：特定參數值分派，搜尋連入的TCP Request 是否有相同 的cookie 值，則分派於固定伺服器，如果沒有搜尋到參數值則為輪 詢方式運作，屬於靜態負載平衡演算法。
