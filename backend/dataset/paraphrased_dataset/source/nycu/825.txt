In this thesis we simulate the embroidery by the following processes: image processing, stitch modeling, stitch placement, and rendering. Figure 3.1 shows the flow of our proposed system. First of all, in the image processing process, the input is an image, we are going to extract the region we want to embroider. In this process, we convert the input color image to grayscale image and segment it by Otsu’s method. Usually, the region produced by Otsu’s method are distorted by noise. We perform morphological opening operation to remove small objects from the foreground and open up a narrow gap between objects. Then, we find the contour of the region. Secondly, in the stitch modeling process, we model a high-quality stitch based on the physical structure of a thread. Because the primitive of embroidery is stitch, if we have more accurate stitch model, the result will be better. We refer to a procedural yarn model generation method [16] to generate stitches, and modify the two ends of a stitch to simulate the effect that stitch sews in and out of fabric. Then, in the stitch placement process, we design some stitch placement methods based on embroidery technique, because from the perspective of computer graphics, how to embroider is a problem of how to place the stitches. We design three stitch styles, fishbone stitch, satin stitch, and flower stitch. Finally, in the rendering process, we render the embroidery model by physically- based rendering technology, the result will be very similar to real embroidery. We choose an appropriate BSDF model based on the light scattering property of the fiber of stitch, and use global illumination technology to get the final result. Image processing Image segmentation Morphological operation Find contours Stitch arrangement Fishbone Stitch Satin stitch Flower stitch Input Stitch modeling Physically-based rendering Output Endpoints modification Figure 3.1: System overview
