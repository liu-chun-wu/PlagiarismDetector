在做人物偵測時，我們需要先把影像做前背景分離，如圖3-5 目的是偵測到人物的位置，那麼會以腳的位置做為偵測的目標。在樹莓派魚 眼攝影機的影像中可以得知，不管往哪個方向走，除了人在樹莓派正下方，腳都 是最靠近影像的中心點；而正下方的人大多數都在人物的中心點。 從圓心開始，以直徑掃描一整個圓的範圍。以圖3-5 為範例，直徑150pixel、 每轉1 度掃瞄一次，以90 度開始逆時鐘掃描。第一個直徑經過的影像像素，記 錄為掃描圖的第一列像素。逆時鐘轉1 度，直徑掃描到的為掃描圖下一列像素， 以此類推。如圖3-6。每一列代表以90 度開始轉了幾度，而圓心則在行數的中 點，中點的左邊代表位移為負的，右邊為正，離中點相差多少行數代表位移多少。 圖 3 - 5 原影像(左)和前背景分離後的影像(右) 圖 3 - 6 將圖3-5(右)以掃描圓的方式後呈現的結果 經過模糊化、threshold 後，由於是透過直徑掃描一整個圓，會發現掃描後 的影像的上半部與下半部剛好左右相反，所以擷取掃描後的影像的中間部分， 整個影像一半大小。接著，利用0~N-1 行數與1~N 行數相減，可以得到圖3-7 白色區塊的邊緣位置。而靠近中點的邊緣都會是非零的，也就是我們想要的腳 部候選點，如圖3-7。 可是當人物在樹莓派正下方時，處理的方式會跟上述的有點不太一樣。當 得到白色區塊的邊緣位置後，利用同列非零的兩個位置取中點。為了避免某些 人物剛好只有部分位置在原始影像的圓心，而非完全的正下方。所以會將前者 的中點再一次與影像中間位置取中點。如圖3-8。 圖 3 - 7 非經過圓心處理過程 圖 3 - 8 經過圓心的處理過程 在前面有提到每一列代表轉了幾度，離中點相差多少行數代表位移多少。 透過這兩個依據，可以將圖3-7 最後的結果的紅色點轉換成圖3-5(左)的影像座 標，圖3-8 亦是如此。如圖3-9。 透過前面鏡頭校正得到的樹莓派實際座標、旋轉角，將圖3-8 的紅色點相對 於中心點轉換成實際座標，公式如下： 𝛼× [cos 𝜃 −sin 𝜃 sin 𝜃 cos 𝜃] × ([xi yi̇] −[xo yȯ ]) + [𝑋 𝑌] = [𝑋i Yi] 其中𝛼為實際座標長度與影像座標長度的比例，𝜃為旋轉角， xi, yi為紅色點 的影像座標，xo, yo為影像中心座標，X、Y 為樹莓派實際座標，Xi, Yi̇為對應紅色 點的實際座標。 圖 3 - 9 紅色點為腳部候選點，圖3-7(左)圖3-8(右)
