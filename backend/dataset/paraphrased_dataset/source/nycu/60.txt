後端服務主要是在處理資料傳遞、資料轉換、中介整合與資料庫 連線等等較為複雜商業邏輯層，本研究以目前較為商用大型後端程式 語言進行比較。目前後端程式最為廣泛使用的語言有C#與JAVA，本 論文對Script 語言如PHP、Python 與Node.js 等等非物件導向語言進 行說明。 由於非物件導向語言通常標榜著易學易開發，但相對就是架構嚴 謹度不足，且對於程式可塑性沒有這麼的靈活，通常被用在實驗性質 或是對單一功能實踐方面，較不適合用整合系統或是大型系統上，進 而造成系統後續維護或是升級上的不便，其比較結果如下表3-2 所 示。 表3-2 C#與JAVA 比較表 程式語言 C# Java 學習難易度 一般容易 稍微困難 函式庫升級 容易 困難 社群支持 眾多 眾多 語言更新 快 慢 開發速度 快 慢 跨平台 .Net Core 已提供 優 整合性 高 中 Web 框架 .net Core MVC Spring MVC Docker 支持 內建支援 需自行製作 功能演進 Lambda、LINQ、Extension Lambda 資料來源：本研究整理 由表3-2 可知，目前C#在微軟與龐大的社群支持下，尤其是在資 料處理方面尤其領先了Java 一個世代，故本論文以開發效率與對它 方產品之支持度進行評估選擇C#做為開發語言，並搭配微軟 ASP.NET Core MVC API 作為後端開方框架，如圖表7 所示。 圖3-3 ASP.NET MVC Web API 架構 資料來源：Sabnis (2015)
