企業最初對可用性的需求，僅將其認定為應用軟體的一種功能特性，其 在軟體設計時，便應由程式設計人員結合於應用軟體中，而無法隨意地修正 與變動。然而，隨著企業系統的複雜性提高，此種缺乏模組化與變動彈性的 軟體設計方式，已無法滿足企業的需求。因此，為能在系統的基礎架構上， 提升系統的可用性，許多技術及儲存方式相繼被提出，例如磁碟陣列RAID、 大型主機的多片邏輯運算卡板、多重對外網路Muti-WAN 等。 然而，隨著企業的發展，更多樣的儲存架構及複雜的企業營運模式，直 接導致企業對高可用性的要求，使得上述架構逐漸無法達成企業對高可用 的期望。為能解決此問題，透過融合底層硬體的技術，以及開發系統中介軟 體，系統層面的不足已逐漸被彌補，相關的技術諸如：虛擬化、儲存設備網 路化、集群軟體(Clusterware)等。而資料庫供應商也著重於上述技術的改善 與強化，綜合考量系統架構與特性，進而設計出具備高可用性系統，以減少 停機的可能性及維護時間。 關於資料庫可用性，根據Oracle 的文件資料庫12C 高可用性概述，主 要有幾個特性(Oracle, 2014)，如下列所示： 1. 可靠性：可靠的硬體架構是高可用性解決方案的一個組成部分，可靠的 軟體包含資料庫本身、應用程式、網頁介面等，對於實現高可用性解決 方案同樣至關重要。其相關特徵是彈性，例如：低成本商用硬體與Oracle Real Application Clusters(Oracle RAC)等軟體相結合，即使單個節點出現 故障，Oracle RAC 資料庫的彈性也允許服務持續運作。 2. 可恢復性：有許多方法可以從故障中恢復，因此，確認高可用性環境中 可能發生的故障類型，以及如何快速從這些故障中恢復服務非常重要。 例如:從資料庫中不小心刪除了關鍵資料，可以採取什麼操作來恢復它， 來達到服務級別協議(SLA)中指定的時間內恢復的能力。 3. 即時錯誤檢測：對於架構中的組件發生故障，快速檢測機制對於從意外 故障中恢復至關重要。例如:雖然可以從故障中恢復，但如果沒即時發現 問題，檢查後發現需要額外的修復時間，或是需要停機，則還是無法滿 足SLA 時間需求，所以環境的運行狀況，還需要可靠的監控機制，才 能快速的分析問題，即時告警並提供相對應的恢復建議。 4. 持續運行：當執行維護時的可用停機時間非常短或是無法停機，例如： 在高可用性體系結構中，維護升級Patch，或是添加CPU、記憶體等相 關硬體部件，是否能提供對數據資料的連續服務，就顯得非常重要。
