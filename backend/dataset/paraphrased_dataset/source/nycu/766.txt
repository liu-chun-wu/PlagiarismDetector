使用者操作系統使用Line 作為主要的通訊軟體，因Line 在國內的普及率 相較於其他常見通訊軟體高，根據Line 公司所發佈之市場調查，全台灣有高達 1700 萬人口都有在使用，故系統設計中先以Line 為首要的通訊軟體開發與設 計，減少需要在展場中下載、安裝額外的應用程式、軟體需求。 中間層的應用程式與伺服器系統則是選用Node.js，擁有較多伺服器、網 頁所需要的API 資源，減少需要重複撰寫程式的過程，來簡化與優化系統架 構。 最底層的資料庫系統選用MySQL 來進行資料庫的模擬，因為具有高度的便 利性與方便取得的特性，因此在研究的過程中以MySQL 進行建構。 下方圖 5 系統架構則是說明各層之間所應用相關程式、系統間關係。 圖 5 系統架構 在系統程式架構中，不同的功能都區分為獨立的伺服器來進行處理，達成 模組化的概念，因此整體的結構之中可以更彈性，不論是在新增、刪除功能， 都能確保功能獨立的運作，不會相互的干擾，同時間以中央伺服器做為系統中 心，可以相互控制達成物聯網的功能，同時間連結上資料庫，讓相同的資訊不 必分散在不同的伺服器中，由中央伺服器傳輸資料，再由不同的伺服其決定在 不同的裝置上呈現形式。 圖 6 伺服器架構中表示出中央伺服器與不同功能伺服器之間的連結，以及 對應裝置、應用程式。 使用者介面 中間層 資料庫 Line Node.js MySQL 前端 後端 圖 6 伺服器架構 通訊軟體伺服器中野區分為數個模組，得以彈性新增與刪除功能，其中 npm_module 為主要模組，主要模組可以控制不同指令對應的操作，因此可以建 立數個對應module 來處理不同的展期與展場，達成單一通訊軟體伺服器卻可以 達成複數的展期資訊提供。 圖 7 通訊軟體伺服器架構中將回應訊息的功能獨立在外，透過 npm_module 指定載入關鍵字。 圖 7 通訊軟體伺服器架構 第三章 系統實作
