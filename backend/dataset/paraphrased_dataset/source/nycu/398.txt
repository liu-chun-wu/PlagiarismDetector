當目標輪廓與要比對的食物輪廓面積大小近似時，我們便能直接拿此食物的圖片，乘上一 個仿射變換矩陣，將食物圖片對應到目標的輪廓上，產生由單一食物對應一個目標輪廓的結果。 為了實現這個目的，我們採用迭代最近點(Iterative closest point, ICP)演算法來計算此仿射變換矩 陣，這是一種在非理想情況下，尋找兩群點之間匹配關係的演算法，求解的結果即為兩群點間 的仿射變換矩陣。迭代最近點演算法的輸入為兩群點座標P(𝐶𝑝)、Q(𝐶𝑞)，分別為食物圖片輪廓 的取樣點與目標輪廓的取樣點，在理想情況下P 的每個點應與目標點群Q 一對一對應，然而在 實際應用上，點與點之間並不會完全的匹配，為了以防會漏掉沒匹配到對應的點，我們採用雙 向的ICP 來計算P 與Q 之間的對應關係。 若是首次迭代尋找到不好的對應點，會使後續迭代也無法找到理想的對應，因此，為了在 一開始就找到比較好的對應關係，我們先更新點群P，將所有p ∈ P 加上（𝐶𝑒𝑛𝑡𝑒𝑟𝑞-𝐶𝑒𝑛𝑡𝑒𝑟𝑝）， 讓P 與Q 點群的中心點重疊。接著，雙向的找出P、Q 之間的對應點，紀錄(1)每個p ∈ P 到Q 上的最近點q，以及(2)每個q ∈ Q 到P 上的最近點p。假設P、Q 兩群點的對應關係為 𝑝𝑎𝑖𝑟𝑝∈𝑃,𝑞∈𝑄(𝑝, 𝑞)，對應關係的數量為P 輪廓點群數量加上Q 輪廓點群數量，而計算是否為最近 點的距離公式如下： 𝑆𝑖𝑧𝑒𝑝𝑎𝑖𝑟 = 𝑆𝑖𝑧𝑒𝑝 + 𝑆𝑖𝑧𝑒𝑞 𝑝𝑎𝑖𝑟𝑝∈𝑃,𝑞∈𝑄(𝑝, 𝑞) = 𝑚𝑖𝑛(𝑑𝑖𝑠𝑡(𝑝, 𝑞) ∗(1 −𝑁𝑝 ⃑⃑⃑⃑⃑ ∙𝑁𝑞 ⃑⃑⃑⃑ )) 與一般迭代最近點演算法不同的是，在計算p、q 兩點之間的距離時，我們並不僅只考慮到 歐式距離，也加入了角度的考量。設 𝑁𝑝 ⃑⃑⃑⃑⃑  和 𝑁𝑞 ⃑⃑⃑⃑  分別為點p 和q 的單位法向量，對 𝑁𝑝 ⃑⃑⃑⃑⃑  和 𝑁𝑞 ⃑⃑⃑⃑  做 內積後可得到兩向量的夾角，利用此夾角來當作p 與q 兩點距離的權重值，夾角角度越小，權 重值越大；夾角角度越大，則權重值越小，讓尋找最近對應點的依據增加了角度的變因。 接著，將已知的對應點 𝑝𝑎𝑖𝑟𝑝∈𝑃,𝑞∈𝑄(𝑝, 𝑞) 的座標值，一一帶入方程式AX=B 解JacobiSvd， 其中A 儲存P 點群的位置資訊，大小為［2*𝑆𝑖𝑧𝑒𝑝𝑎𝑖𝑟, 4］，B 儲存對應Q 點群的位置資訊，大 小為［2*𝑆𝑖𝑧𝑒𝑝𝑎𝑖𝑟, 1］，X 則是求解的旋轉與位移資訊，大小為［4, 1］，藉由此旋轉與位移的 資訊，我們便能得到一個仿射變換矩陣。 [ 𝑝𝑥0 −𝑝𝑦0 𝑝𝑦0 𝑝𝑥0 𝑝𝑥1 −𝑝𝑦1 𝑝𝑦1 𝑝𝑥1 𝑝𝑥2 −𝑝𝑦2 𝑝𝑦2 𝑝𝑥2 . . . . . . . . 𝑝𝑥𝑛 −𝑝𝑦𝑛 𝑝𝑦𝑛 𝑝𝑥𝑛 ] * [ cos𝜃 sin𝜃 𝑑𝑥 𝑑𝑦 ] = [ 𝑞𝑥0 𝑞𝑦0 𝑞𝑥1 𝑞𝑦1 𝑞𝑥2 𝑞𝑦2 . . 𝑞𝑥𝑛 𝑞𝑦𝑛 ] 假設此次為第k 輪迭代，為了避免誤差值的累積，在解方程式時帶入的P 對應點是初始點 群 𝑃0 ′ 的座標值，並非上一輪的點群 𝑃𝑘−1 ′ 的座標值，因此，將初始點群 𝑃0 ′ 乘上此仿射變換矩 陣，便能得到第k 輪迭代後的新點群 𝑃𝑘 ′，然後由此新點群再次尋找與點群Q 的對應關係，開 始下一輪的迭代，直到迭代次數k < 𝐼𝐼𝐶𝑃，𝐼𝐼𝐶𝑃 = 15。 另外，由於演算法的結果可能會掉入區域極小值，我們對點群P 順時針旋轉0 度、90 度、 180 度、270 度，用不同角度的取樣點做迭代最近點演算法，共得到四個仿射變換矩陣。為了找 出用哪一個仿射變換矩陣會有比較好的結果，我們分別將這四個仿射變換矩陣乘上食物輪廓的 取樣點P，得到四個點群，接著，讓他們分別與目標輪廓的取樣點Q 計算平均最短距離，值最 小者，便是我們所求的最佳解。最後，只需要將食物圖片乘上最佳解的仿射變換矩陣，便能得 到單一食物對應目標輪廓的結果。
