當之前所有的步驟都做完後，就可以完整的把評分優化系統放在區塊鏈上並開始運 作，如圖5-4，從介面中可以看到Movie_rating_origin 的框中是之前輸入的參數，包含電 影編號即電影評分，也就是使用者資訊會自動做輸入及儲存，當合約執行完畢之後，就 可以看到每部電影做過優化的分數在Movie_score 中。但是以上的介紹僅限於後端的操 作，並沒辦法讓使用者輕易看到每個電影的精準分數，甚至也沒辦法讓其他的評分人對 電影做新的評價，使資料無法更新，因此在評分系統上區塊鏈這個部分最後一個步驟就 是需要實作一個可呈現且可輸入新資料的區塊鏈資訊網頁。 圖5-4 評分優化系統於Mist 上做呈現 在這個部分，實驗除了會用到平時網頁建置的語法：HTML5 和JavaScript 之外，我 們還要使用web3.js 這個套件去將以太坊私有鏈中節點和網頁上評分人所輸入的資料輸 入、輸出並做運算。在安裝web3.js 之前，我們還要先安裝npm 的套件先才能成功的安 裝web3.js。而圖5-5 和圖5-6 是本實驗最終的界面圖案，初始介面為圖5-5，可以看到 右邊的輸入格中可以輸入電影評分、電影編號，並且按下送出的按鈕後，就會在每一次 執行合約後自動計算改變電影評分，並將計算完的分數儲存在區塊鏈上，使其他人可以 參考精準化過後的評分。而圖5-6 則是結果介面，左邊為算出每部電影的分數，包含電 影編號和電影最終分數，右邊為歷史資料，內容就有評分人的地址、電影分數和電影評 分。由於之前所提到過的區塊鏈匿名性，因此評分人的資料在加密過後，並非顯示評分 人的真實姓名，改用經過加密過後的資料顯示，而區塊鏈也同時保有透明性，所以可以 在網頁中看到每一部電影評分的記錄。最後則將做好的網頁放在server 上，在本實驗以 django 來實作這部分實驗的後端server，最終的網址為140.113.31.181:9000。 圖5-5 網頁介面：起始介面 圖5-6 網頁介面：結果介面
